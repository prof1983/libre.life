<!DOCTYPE html>
<html>
<head>
<link rel="stylesheet" href="/css/main.css"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Language" content="ru"/>
<title>Краудфандинг на Эфириуме - Libre</title>
</head>
<body>
<header></header><script src="/js/header.js"></script>
<main>

<h1>Краудфандинг на Эфириуме</h1>

<figure>
<img src="00.jpg"/>
</figure>

<!--
Иногда хорошая идея требует много средств и коллективных усилий. Вы можете просить пожертвования. Но доноры хотят быть уверены в том, что проект в целом получит надлежащее финансирование и стартанет. В этом случае краудфандинг идеален: вы объявляете конечную сумму, которая нужна для осуществления проекта и сроки в течение которых вы планируете собрать. 
-->


<h2>Краудфандинг для вашей идеи</h2>

<p>
Иногда хорошая идея требует много средств и коллективных усилий. Вы можете просить пожертвования. Но доноры хотят быть уверены в том, что проект в целом получит надлежащее финансирование и стартанет. В этом случае краудфандинг идеален: вы объявляете конечную сумму, которая нужна для осуществления проекта и сроки в течение которых вы планируете собрать. Если за предполагаемое время сумма не будет собрана, то деньги будут возвращены всем донорам и они ни чем не рискуют. Поскольку код открыт и проверяем, пропадает необходимость в какой-то особой централизованной платформе. Таким образом не придется платить посредникам. Только комиссия за газ.
</p>




<h2>Токены и ДАО (Демократические Автономные Организации)</h2>

<p>
В этот раз мы будем делать улучшенный краудфандинг, решая две важные проблемы: управление и хранение пожертвований, и как расходуются деньги после того, как средства будут собраны.
</p>

<p>
Награды в краудфандинге, как правило, отслеживаются центральной базой данных, которая фиксирует всех доноров: если проект не собрал требуемую сумму в срок, то донор награду, естественно, не получит. Мы поступи иначе и просто создадим жетон для отслеживания наград. Каждый, кто вносит свой вклад получает жетон. Который, кстати, можно перепродать, подарить или держать для следующего использования. Когда наступит время, чтобы получать материальную награду от производителя нужно будет просто поменять жетоны на реальные продукты. Доноры могут сохранить свои жетоны, даже если проект не наберет требуемую сумму, как сувенир.
</p>

<p>
Кроме того, обычно, те, кто финансировал проект не имеют никакого влияния на то, как расходуются деньги, после того, как сумма собрана. Из-за бесхозяйственности многие проекты так и не смогли произвести что либо ценное. В этом проекте мы будем использовать демократическую организацию, которая должна будет одобрить любые расходы. Это часто называют краудсэйл или crowd equity и это настолько ценно, что в некоторых случаях жетон уже сам по себе награда, особенно в проектах, где группа людей собирается вместе, чтобы трудиться для общественного блага.
</p>

<figure>
<img src="01.jpg"/>
</figure>

<p>
Если вы просто тестируете, то переключите кошелек в тестовый режим и включите майнинг.
</p>

<p>
Во-первых, создайте токен. Для этого примера, мы собираемся создать 100 жетонов, которые будут называться “гаджеты”, а в качестве символа будем использовать смайлик с изображением коробки Emoji. Гаджеты будут целые, поэтому 0 знаков после запятой. Устанавливаем и сохраняем адрес.
</p>

<p>
Теперь создаем акционерное общество. В этом примере мы будем использовать адрес жетона, который мы только что создали, минимальный кворум 10 и 1500 минут (25 часов), на голосование. Устанавливаем этот смарт-контракт и сохраняем адрес.
</p>




<h2>Код</h2>

<p>
Теперь копируем этот код и начнем создавать краудсэйл:
<a href="https://ethereum.org/crowdsale#the-code" target="_blank">https://ethereum.org/crowdsale#the-code</a>
</p>

<pre>
contract token { function transfer(address receiver, uint amount){  } }


contract Crowdsale {
    address public beneficiary;
    uint public fundingGoal; uint public amountRaised; uint public deadline; uint public price;
    token public tokenReward;   
    Funder[] public funders;
    event FundTransfer(address backer, uint amount, bool isContribution);
    bool crowdsaleClosed = false;

    /* data structure to hold information about campaign contributors */
    struct Funder {
        address addr;
        uint amount;
    }

    /*  at initialization, setup the owner */
    function Crowdsale(
        address ifSuccessfulSendTo, 
        uint fundingGoalInEthers, 
        uint durationInMinutes, 
        uint etherCostOfEachToken, 
        token addressOfTokenUsedAsReward
    ) {
        beneficiary = ifSuccessfulSendTo;
        fundingGoal = fundingGoalInEthers * 1 ether;
        deadline = now + durationInMinutes * 1 minutes;
        price = etherCostOfEachToken * 1 ether;
        tokenReward = token(addressOfTokenUsedAsReward);
    }   

    /* The function without name is the default function that is called whenever anyone sends funds to a contract */
    function () {
        if (crowdsaleClosed) throw;
        uint amount = msg.value;
        funders[funders.length++] = Funder({addr: msg.sender, amount: amount});
        amountRaised += amount;
        tokenReward.transfer(msg.sender, amount / price);
        FundTransfer(msg.sender, amount, true);
    }

    modifier afterDeadline() { if (now >= deadline) _ }

    /* checks if the goal or time limit has been reached and ends the campaign */
    function checkGoalReached() afterDeadline {
        if (amountRaised >= fundingGoal){
            beneficiary.send(amountRaised);
            FundTransfer(beneficiary, amountRaised, false);
        } else {
            for (uint i = 0; i < funders.length; ++i) {
              funders[i].addr.send(funders[i].amount);  
              FundTransfer(funders[i].addr, funders[i].amount, false);
            }               
        }

        beneficiary.send(this.balance); // send any remaining balance to beneficiary anyway
        crowdsaleClosed = true;
    }
}
</pre>

<p>
(в английской версии приводится подробный разбор кода, для тех кто хочет научиться писать свои смарт-контракты)
</p>




<h2>Как пользоваться</h2>

<p>
Идем на вкладку “Контракты” и устанавливаем код.
</p>

<figure>
<img src="02.jpg"/>
</figure>

<p>
Добавьте адрес только что созданного акционерного общества.
<br/>
Заявим 250 эфиров, как требуемую сумму для сбора
<br/>
Если это эксперимент или демонстрация, то срок сбора средств 3~10 минут. Если это реальный контракт, то можно поставить 45000 часов (31 день).
<br/>
Сколько эфиров будет стоить одна награда, зависит от того какие параметры были введены выше. В этом примере стоимость будет 5 эфиров (= 250 / (100/2)).
<br/>
Добавляем адрес жетона, который мы создали выше.
<br/>
Выбирайте цену на газ, устанавливайте и ждите пока краудсэйл запустится. После того как страница краудсэйла будет создана, выставляем 50 гаджетов на продажу, чтобы получать за них эфир.
</p>




<h2>У меня есть 100 гаджетов. Почему бы не продать их все?</h2>

<p>
Это очень важный момент. Защита от рейдерства. Краудсэйл который мы строим будет полностью контролироваться акционерами, т.е. Владельцами гаджетов. Тот кто владет большей частью акций (50% + 1) сможет распоряжаться собранными деньгами по своему усмотрению. Можно усложнить код, чтобы избежать подобных проблем. Мы поступим проще: продадим только половину гаджетов, а остаток раздадим нескольким надежным организациям.
</p>




<h2>Вывести собранные средства</h2>

<p>
После того, как сумма будет собрана, можно просто перенаправить ее в свой кошелек.
</p>

<p>
Безымянная функция выполняется каждый раз когда контракт получает эфир. Если сбор средств еще не закрылся, то эта функция отправляет купленное количество жетонов, тому кто заплатил эфир. Если контракт уже закрылся или жетоны закончились, то эфир покупателя не будет принят (но газ будет потрачен).
</p>

<figure>
<img src="03.jpg"/>
</figure>

<p>
Это предотвращает такие ситуации, когда кто-то потратит эфир но останется без жетонов. В предыдущей версии этого контракта мы использовали самоуничтожение контракта после того как сбор средств закончился: но это приводило к тому, что любая сумма отправленная с опозданием улетала в пустоту. Создав безымянную функцию мы предотвращаем потерю денег.
</p>

<p>
Контракт имеет единственную функцию, без каких-либо параметров, которая может быть выполнена любым, как только сбор средств закончен (и даже может быть выполнена автоматически по расписанию с помощью Эфириум-Будильника <a href="http://www.ethereum-alarm-clock.com/" target="_blank">ethereum-alarm-clock.com</a>). Функция будет видеть, что средства были собраны и распределит их должным образом.
</p>

<figure>
<img src="04.jpg"/>
</figure>

<br/>

<p>
<a href="https://www.facebook.com/arsen.guzhva" target="_blank">Арсений Гужва</a> <a href="https://www.facebook.com/notes/%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B8%D0%B9-%D0%B3%D1%83%D0%B6%D0%B2%D0%B0/%D0%BA%D1%80%D0%B0%D1%83%D0%B4%D1%84%D0%B0%D0%BD%D0%B4%D0%B8%D0%BD%D0%B3-%D0%BD%D0%B0-%D1%8D%D1%84%D0%B8%D1%80%D0%B8%D1%83%D0%BC%D0%B5/1760075004212763" target="_blank">21 марта 2016 г.</a>
</p>

<p>
Перевод с английского. Оригинал тут: <a href="https://ethereum.org/crowdsale" target="_blank">ethereum.org/crowdsale</a>
</p>

<br/>

<p>
Источник:
<a href="http://cryptoscope.blogspot.ru/2016/03/21-2016.html" target="_blank">cryptoscope.blogspot.ru/2016/03/21-2016.html</a>
</p>




<br/>
<br/>


<p class="h2"><a href="/dao/ru">Децентрализованные Автономные Организации (DAO)</a></p>

</main>
<footer><div>7524-05-03 - 7524-05-03</div></footer><script src="/js/footer.js"></script>
</body>
</html>