<!DOCTYPE html>
<html>
<head>
<link rel="stylesheet" href="/css/main.css"/>
<meta charset="UTF-8" />
<title>LibreMoney API</title>
</head>
<header></header><script src="/js/header.js"></script>
<main>


<table align="right">
<tr>
<td> <div id="toc" class="toc"><div id="toctitle"><h2>Содержание</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#General_Notes"><span class="tocnumber">2</span> <span class="toctext"><b>General Notes</b></span></a></li>

<li class="toclevel-1 tocsection-3"><a href="account/en#Account_operations"><span class="tocnumber">3</span> <span class="toctext"><b>Account operations</b></span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="account/en#Get_Account"><span class="tocnumber">3.1</span> <span class="toctext"><b>Get Account</b></span></a></li>
<li class="toclevel-2 tocsection-8"><a href="account/en#Get_Account_ID"><span class="tocnumber">3.2</span> <span class="toctext"><b>Get Account ID</b></span></a></li>
<li class="toclevel-2 tocsection-12"><a href="account/en#Get_Account_Block_IDs"><span class="tocnumber">3.3</span> <span class="toctext"><b>Get Account Block IDs</b></span></a></li>
<li class="toclevel-2 tocsection-16"><a href="account/en#Get_Account_Public_Key"><span class="tocnumber">3.4</span> <span class="toctext"><b>Get Account Public Key</b></span></a></li>
<li class="toclevel-2 tocsection-20"><a href="account/en#Get_Account_Transaction_IDs"><span class="tocnumber">3.5</span> <span class="toctext"><b>Get Account Transaction IDs</b></span></a></li>
<li class="toclevel-2 tocsection-24"><a href="account/en#Get_Balance"><span class="tocnumber">3.6</span> <span class="toctext"><b>Get Balance</b></span></a></li>
<li class="toclevel-2 tocsection-28"><a href="account/en#Get_Guaranteed_Balance"><span class="tocnumber">3.7</span> <span class="toctext"><b>Get Guaranteed Balance</b></span></a></li>
<li class="toclevel-2 tocsection-32"><a href="account/en#Lease_Balance"><span class="tocnumber">3.8</span> <span class="toctext"><b>Lease Balance</b></span></a></li>
<li class="toclevel-2 tocsection-36"><a href="account/en#Start_.2F_Stop_.2F_Get_Forging"><span class="tocnumber">3.9</span> <span class="toctext"><b>Start / Stop / Get Forging</b></span></a></li>
<li class="toclevel-2 tocsection-40"><a href="account/en#Set_Account_Information"><span class="tocnumber">3.10</span> <span class="toctext"><b>Set Account Information</b></span></a></li>
</ul>
</li>

<li class="toclevel-1 tocsection-44"><a href="#Alias_operations"><span class="tocnumber">4</span> <span class="toctext"><b>Alias operations</b></span></a>
<ul>
<li class="toclevel-2 tocsection-45"><a href="#Create.2Fassign_alias"><span class="tocnumber">4.1</span> <span class="toctext"><b>Create/assign alias</b></span></a>
<ul>
<li class="toclevel-3 tocsection-46"><a href="#Request_11"><span class="tocnumber">4.1.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-47"><a href="#Response_11"><span class="tocnumber">4.1.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-48"><a href="#Example_11"><span class="tocnumber">4.1.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-49"><a href="#Get_alias"><span class="tocnumber">4.2</span> <span class="toctext"><b>Get alias</b></span></a>
<ul>
<li class="toclevel-3 tocsection-50"><a href="#Request_12"><span class="tocnumber">4.2.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-51"><a href="#Response_12"><span class="tocnumber">4.2.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-52"><a href="#Example_12"><span class="tocnumber">4.2.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-53"><a href="#Get_aliases"><span class="tocnumber">4.3</span> <span class="toctext"><b>Get aliases</b></span></a>
<ul>
<li class="toclevel-3 tocsection-54"><a href="#Request_13"><span class="tocnumber">4.3.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-55"><a href="#Response_13"><span class="tocnumber">4.3.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-56"><a href="#Example_13"><span class="tocnumber">4.3.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-57"><a href="#Get_alias_ID_.28Depreciated.29"><span class="tocnumber">4.4</span> <span class="toctext"><b>Get alias ID (Depreciated)</b></span></a>
<ul>
<li class="toclevel-3 tocsection-58"><a href="#Request_14"><span class="tocnumber">4.4.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-59"><a href="#Response_14"><span class="tocnumber">4.4.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-60"><a href="#Example_14"><span class="tocnumber">4.4.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-61"><a href="#Get_alias_IDs_.28Depreciated.29"><span class="tocnumber">4.5</span> <span class="toctext"><b>Get alias IDs (Depreciated)</b></span></a>
<ul>
<li class="toclevel-3 tocsection-62"><a href="#Request_15"><span class="tocnumber">4.5.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-63"><a href="#Response_15"><span class="tocnumber">4.5.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-64"><a href="#Example_15"><span class="tocnumber">4.5.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-65"><a href="#Get_alias_URI_.28Depreciated.29"><span class="tocnumber">4.6</span> <span class="toctext"><b>Get alias URI (Depreciated)</b></span></a>
<ul>
<li class="toclevel-3 tocsection-66"><a href="#Request_16"><span class="tocnumber">4.6.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-67"><a href="#Response_16"><span class="tocnumber">4.6.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-68"><a href="#Example_16"><span class="tocnumber">4.6.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-69"><a href="#List_Aliases_.28Depreciated.29"><span class="tocnumber">4.7</span> <span class="toctext"><b>List Aliases (Depreciated)</b></span></a>
<ul>
<li class="toclevel-3 tocsection-70"><a href="#Request_17"><span class="tocnumber">4.7.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-71"><a href="#Response_17"><span class="tocnumber">4.7.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-72"><a href="#Example_17"><span class="tocnumber">4.7.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-73"><a href="#Arbitrary_Message_System_Operations"><span class="tocnumber">5</span> <span class="toctext"><b>Arbitrary Message System Operations</b></span></a>
<ul>
<li class="toclevel-2 tocsection-74"><a href="#Send_Message"><span class="tocnumber">5.1</span> <span class="toctext"><b>Send Message</b></span></a>
<ul>
<li class="toclevel-3 tocsection-75"><a href="#Request_18"><span class="tocnumber">5.1.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-76"><a href="#Response_18"><span class="tocnumber">5.1.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-77"><a href="#Example_18"><span class="tocnumber">5.1.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-78"><a href="#Block_operations"><span class="tocnumber">6</span> <span class="toctext"><b>Block operations</b></span></a>
<ul>
<li class="toclevel-2 tocsection-79"><a href="#Get_Block"><span class="tocnumber">6.1</span> <span class="toctext"><b>Get Block</b></span></a>
<ul>
<li class="toclevel-3 tocsection-80"><a href="#Request_19"><span class="tocnumber">6.1.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-81"><a href="#Response_19"><span class="tocnumber">6.1.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-82"><a href="#Example_19"><span class="tocnumber">6.1.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-83"><a href="#Asset_exchange_operations"><span class="tocnumber">7</span> <span class="toctext"><b>Asset exchange operations</b></span></a>
<ul>
<li class="toclevel-2 tocsection-84"><a href="#Issue_asset"><span class="tocnumber">7.1</span> <span class="toctext"><b>Issue asset</b></span></a>
<ul>
<li class="toclevel-3 tocsection-85"><a href="#Request_20"><span class="tocnumber">7.1.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-86"><a href="#Response_20"><span class="tocnumber">7.1.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-87"><a href="#Example_20"><span class="tocnumber">7.1.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-88"><a href="#Get_asset_IDs"><span class="tocnumber">7.2</span> <span class="toctext"><b>Get asset IDs</b></span></a>
<ul>
<li class="toclevel-3 tocsection-89"><a href="#Request_21"><span class="tocnumber">7.2.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-90"><a href="#Response_21"><span class="tocnumber">7.2.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-91"><a href="#Example_21"><span class="tocnumber">7.2.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-92"><a href="#Get_asset"><span class="tocnumber">7.3</span> <span class="toctext"><b>Get asset</b></span></a>
<ul>
<li class="toclevel-3 tocsection-93"><a href="#Request_22"><span class="tocnumber">7.3.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-94"><a href="#Response_22"><span class="tocnumber">7.3.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-95"><a href="#Example_22"><span class="tocnumber">7.3.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-96"><a href="#Get_assets"><span class="tocnumber">7.4</span> <span class="toctext"><b>Get assets</b></span></a>
<ul>
<li class="toclevel-3 tocsection-97"><a href="#Request_23"><span class="tocnumber">7.4.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-98"><a href="#Response_23"><span class="tocnumber">7.4.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-99"><a href="#Example_23"><span class="tocnumber">7.4.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-100"><a href="#Get_all_assets"><span class="tocnumber">7.5</span> <span class="toctext"><b>Get all assets</b></span></a>
<ul>
<li class="toclevel-3 tocsection-101"><a href="#Request_24"><span class="tocnumber">7.5.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-102"><a href="#Response_24"><span class="tocnumber">7.5.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-103"><a href="#Example_24"><span class="tocnumber">7.5.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-104"><a href="#Get_assets_by_name_.28Depreciated.29"><span class="tocnumber">7.6</span> <span class="toctext"><b>Get assets by name (Depreciated)</b></span></a>
<ul>
<li class="toclevel-3 tocsection-105"><a href="#Request_25"><span class="tocnumber">7.6.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-106"><a href="#Response_25"><span class="tocnumber">7.6.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-107"><a href="#Example_25"><span class="tocnumber">7.6.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-108"><a href="#Get_assets_by_issuer"><span class="tocnumber">7.7</span> <span class="toctext"><b>Get assets by issuer</b></span></a>
<ul>
<li class="toclevel-3 tocsection-109"><a href="#Request_26"><span class="tocnumber">7.7.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-110"><a href="#Response_26"><span class="tocnumber">7.7.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-111"><a href="#Example_26"><span class="tocnumber">7.7.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-112"><a href="#Get_all_trades"><span class="tocnumber">7.8</span> <span class="toctext"><b>Get all trades</b></span></a>
<ul>
<li class="toclevel-3 tocsection-113"><a href="#Request_27"><span class="tocnumber">7.8.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-114"><a href="#Response_27"><span class="tocnumber">7.8.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-115"><a href="#Example_27"><span class="tocnumber">7.8.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-116"><a href="#Get_trades"><span class="tocnumber">7.9</span> <span class="toctext"><b>Get trades</b></span></a>
<ul>
<li class="toclevel-3 tocsection-117"><a href="#Request_28"><span class="tocnumber">7.9.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-118"><a href="#Response_28"><span class="tocnumber">7.9.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-119"><a href="#Example_28"><span class="tocnumber">7.9.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-120"><a href="#Transfer_asset"><span class="tocnumber">7.10</span> <span class="toctext"><b>Transfer asset</b></span></a>
<ul>
<li class="toclevel-3 tocsection-121"><a href="#Request_29"><span class="tocnumber">7.10.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-122"><a href="#Response_29"><span class="tocnumber">7.10.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-123"><a href="#Example_29"><span class="tocnumber">7.10.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-124"><a href="#Place_order"><span class="tocnumber">7.11</span> <span class="toctext"><b>Place order</b></span></a>
<ul>
<li class="toclevel-3 tocsection-125"><a href="#Request_30"><span class="tocnumber">7.11.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-126"><a href="#Response_30"><span class="tocnumber">7.11.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-127"><a href="#Example_30"><span class="tocnumber">7.11.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-128"><a href="#Get_order_IDs"><span class="tocnumber">7.12</span> <span class="toctext"><b>Get order IDs</b></span></a>
<ul>
<li class="toclevel-3 tocsection-129"><a href="#Request_31"><span class="tocnumber">7.12.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-130"><a href="#Response_31"><span class="tocnumber">7.12.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-131"><a href="#Example_31"><span class="tocnumber">7.12.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-132"><a href="#Get_orders"><span class="tocnumber">7.13</span> <span class="toctext"><b>Get orders</b></span></a>
<ul>
<li class="toclevel-3 tocsection-133"><a href="#Request_32"><span class="tocnumber">7.13.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-134"><a href="#Response_32"><span class="tocnumber">7.13.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-135"><a href="#Example_32"><span class="tocnumber">7.13.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-136"><a href="#Get_current_account_order_IDs"><span class="tocnumber">7.14</span> <span class="toctext"><b>Get current account order IDs</b></span></a>
<ul>
<li class="toclevel-3 tocsection-137"><a href="#Request_33"><span class="tocnumber">7.14.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-138"><a href="#Response_33"><span class="tocnumber">7.14.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-139"><a href="#Example_33"><span class="tocnumber">7.14.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-140"><a href="#Get_order"><span class="tocnumber">7.15</span> <span class="toctext"><b>Get order</b></span></a>
<ul>
<li class="toclevel-3 tocsection-141"><a href="#Request_34"><span class="tocnumber">7.15.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-142"><a href="#Response_34"><span class="tocnumber">7.15.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-143"><a href="#Example_34"><span class="tocnumber">7.15.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-144"><a href="#Get_all_open_orders"><span class="tocnumber">7.16</span> <span class="toctext"><b>Get all open orders</b></span></a>
<ul>
<li class="toclevel-3 tocsection-145"><a href="#Request_35"><span class="tocnumber">7.16.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-146"><a href="#Response_35"><span class="tocnumber">7.16.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-147"><a href="#Example_35"><span class="tocnumber">7.16.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-148"><a href="#Cancel_order"><span class="tocnumber">7.17</span> <span class="toctext"><b>Cancel order</b></span></a>
<ul>
<li class="toclevel-3 tocsection-149"><a href="#Request_36"><span class="tocnumber">7.17.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-150"><a href="#Response_36"><span class="tocnumber">7.17.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-151"><a href="#Example_36"><span class="tocnumber">7.17.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-152"><a href="#Poll_operations"><span class="tocnumber">8</span> <span class="toctext"><b>Poll operations</b></span></a>
<ul>
<li class="toclevel-2 tocsection-153"><a href="#Create_Poll"><span class="tocnumber">8.1</span> <span class="toctext"><b>Create Poll</b></span></a>
<ul>
<li class="toclevel-3 tocsection-154"><a href="#Request_37"><span class="tocnumber">8.1.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-155"><a href="#Response_37"><span class="tocnumber">8.1.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-156"><a href="#Example_37"><span class="tocnumber">8.1.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-157"><a href="#Get_Poll"><span class="tocnumber">8.2</span> <span class="toctext"><b>Get Poll</b></span></a>
<ul>
<li class="toclevel-3 tocsection-158"><a href="#Request_38"><span class="tocnumber">8.2.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-159"><a href="#Response_38"><span class="tocnumber">8.2.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-160"><a href="#Example_38"><span class="tocnumber">8.2.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-161"><a href="#Get_Poll_IDs"><span class="tocnumber">8.3</span> <span class="toctext"><b>Get Poll IDs</b></span></a>
<ul>
<li class="toclevel-3 tocsection-162"><a href="#Request_39"><span class="tocnumber">8.3.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-163"><a href="#Response_39"><span class="tocnumber">8.3.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-164"><a href="#Example_39"><span class="tocnumber">8.3.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-165"><a href="#Cast_Vote"><span class="tocnumber">8.4</span> <span class="toctext"><b>Cast Vote</b></span></a>
<ul>
<li class="toclevel-3 tocsection-166"><a href="#Request_40"><span class="tocnumber">8.4.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-167"><a href="#Response_40"><span class="tocnumber">8.4.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-168"><a href="#Example_40"><span class="tocnumber">8.4.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-169"><a href="#Server_software_operations"><span class="tocnumber">9</span> <span class="toctext"><b>Server software operations</b></span></a>
<ul>
<li class="toclevel-2 tocsection-170"><a href="#Get_Constants"><span class="tocnumber">9.1</span> <span class="toctext"><b>Get Constants</b></span></a>
<ul>
<li class="toclevel-3 tocsection-171"><a href="#Request_41"><span class="tocnumber">9.1.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-172"><a href="#Response_41"><span class="tocnumber">9.1.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-173"><a href="#Example_41"><span class="tocnumber">9.1.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-174"><a href="#Get_My_Info"><span class="tocnumber">9.2</span> <span class="toctext"><b>Get My Info</b></span></a>
<ul>
<li class="toclevel-3 tocsection-175"><a href="#Request_42"><span class="tocnumber">9.2.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-176"><a href="#Response_42"><span class="tocnumber">9.2.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-177"><a href="#Example_42"><span class="tocnumber">9.2.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-178"><a href="#Get_Peer"><span class="tocnumber">9.3</span> <span class="toctext"><b>Get Peer</b></span></a>
<ul>
<li class="toclevel-3 tocsection-179"><a href="#Request_43"><span class="tocnumber">9.3.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-180"><a href="#Response:"><span class="tocnumber">9.3.2</span> <span class="toctext">Response:</span></a></li>
<li class="toclevel-3 tocsection-181"><a href="#Example_43"><span class="tocnumber">9.3.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-182"><a href="#Get_Peers"><span class="tocnumber">9.4</span> <span class="toctext"><b>Get Peers</b></span></a>
<ul>
<li class="toclevel-3 tocsection-183"><a href="#Request_44"><span class="tocnumber">9.4.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-184"><a href="#Response:_2"><span class="tocnumber">9.4.2</span> <span class="toctext">Response:</span></a></li>
<li class="toclevel-3 tocsection-185"><a href="#Example_44"><span class="tocnumber">9.4.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-186"><a href="#Get_State"><span class="tocnumber">9.5</span> <span class="toctext"><b>Get State</b></span></a>
<ul>
<li class="toclevel-3 tocsection-187"><a href="#Request_45"><span class="tocnumber">9.5.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-188"><a href="#Response_43"><span class="tocnumber">9.5.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-189"><a href="#Example_45"><span class="tocnumber">9.5.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-190"><a href="#Get_Time"><span class="tocnumber">9.6</span> <span class="toctext"><b>Get Time</b></span></a>
<ul>
<li class="toclevel-3 tocsection-191"><a href="#Request_46"><span class="tocnumber">9.6.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-192"><a href="#Response_44"><span class="tocnumber">9.6.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-193"><a href="#Example_46"><span class="tocnumber">9.6.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-194"><a href="#Get_Blockchain_Status"><span class="tocnumber">9.7</span> <span class="toctext"><i>Get Blockchain Status</i></span></a>
<ul>
<li class="toclevel-3 tocsection-195"><a href="#Request_47"><span class="tocnumber">9.7.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-196"><a href="#Response_45"><span class="tocnumber">9.7.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-197"><a href="#Example_47"><span class="tocnumber">9.7.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-198"><a href="#Hallmark_operations"><span class="tocnumber">10</span> <span class="toctext"><b>Hallmark operations</b></span></a>
<ul>
<li class="toclevel-2 tocsection-199"><a href="#Decode_Hallmark"><span class="tocnumber">10.1</span> <span class="toctext"><b>Decode Hallmark</b></span></a>
<ul>
<li class="toclevel-3 tocsection-200"><a href="#Request_48"><span class="tocnumber">10.1.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-201"><a href="#Response_46"><span class="tocnumber">10.1.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-202"><a href="#Example_48"><span class="tocnumber">10.1.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-203"><a href="#Generate_Hallmark"><span class="tocnumber">10.2</span> <span class="toctext"><b>Generate Hallmark</b></span></a>
<ul>
<li class="toclevel-3 tocsection-204"><a href="#Request_49"><span class="tocnumber">10.2.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-205"><a href="#Response_47"><span class="tocnumber">10.2.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-206"><a href="#Example_49"><span class="tocnumber">10.2.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-207"><a href="#Token_operations"><span class="tocnumber">11</span> <span class="toctext"><b>Token operations</b></span></a>
<ul>
<li class="toclevel-2 tocsection-208"><a href="#Decode_Token"><span class="tocnumber">11.1</span> <span class="toctext"><b>Decode Token</b></span></a>
<ul>
<li class="toclevel-3 tocsection-209"><a href="#Request_50"><span class="tocnumber">11.1.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-210"><a href="#Response_48"><span class="tocnumber">11.1.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-211"><a href="#Example_50"><span class="tocnumber">11.1.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-212"><a href="#Generate_Token"><span class="tocnumber">11.2</span> <span class="toctext"><b>Generate Token</b></span></a>
<ul>
<li class="toclevel-3 tocsection-213"><a href="#Request_51"><span class="tocnumber">11.2.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-214"><a href="#Response_49"><span class="tocnumber">11.2.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-215"><a href="#Example_51"><span class="tocnumber">11.2.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-216"><a href="#Transaction_operations"><span class="tocnumber">12</span> <span class="toctext"><b>Transaction operations</b></span></a>
<ul>
<li class="toclevel-2 tocsection-217"><a href="#Broadcast_Transaction"><span class="tocnumber">12.1</span> <span class="toctext"><b>Broadcast Transaction</b></span></a>
<ul>
<li class="toclevel-3 tocsection-218"><a href="#Request_52"><span class="tocnumber">12.1.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-219"><a href="#Response_50"><span class="tocnumber">12.1.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-220"><a href="#Example_52"><span class="tocnumber">12.1.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-221"><a href="#Calculate_Full_Hash"><span class="tocnumber">12.2</span> <span class="toctext"><b>Calculate Full Hash</b></span></a>
<ul>
<li class="toclevel-3 tocsection-222"><a href="#Request_53"><span class="tocnumber">12.2.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-223"><a href="#Response_51"><span class="tocnumber">12.2.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-224"><a href="#Example_53"><span class="tocnumber">12.2.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-225"><a href="#Get_Account_Transaction_IDs_2"><span class="tocnumber">12.3</span> <span class="toctext"><b>Get Account Transaction IDs</b></span></a>
<ul>
<li class="toclevel-3 tocsection-226"><a href="#Request_54"><span class="tocnumber">12.3.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-227"><a href="#Response_52"><span class="tocnumber">12.3.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-228"><a href="#Example_54"><span class="tocnumber">12.3.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-229"><a href="#Get_Unconfirmed_Account_Transaction_IDs"><span class="tocnumber">12.4</span> <span class="toctext"><b>Get Unconfirmed Account Transaction IDs</b></span></a>
<ul>
<li class="toclevel-3 tocsection-230"><a href="#Request_55"><span class="tocnumber">12.4.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-231"><a href="#Response_53"><span class="tocnumber">12.4.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-232"><a href="#Example_55"><span class="tocnumber">12.4.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-233"><a href="#Get_Transaction"><span class="tocnumber">12.5</span> <span class="toctext"><b>Get Transaction</b></span></a>
<ul>
<li class="toclevel-3 tocsection-234"><a href="#Request_56"><span class="tocnumber">12.5.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-235"><a href="#Response_54"><span class="tocnumber">12.5.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-236"><a href="#Example_56"><span class="tocnumber">12.5.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-237"><a href="#Parse_Transaction"><span class="tocnumber">12.6</span> <span class="toctext"><b>Parse Transaction</b></span></a>
<ul>
<li class="toclevel-3 tocsection-238"><a href="#Request_57"><span class="tocnumber">12.6.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-239"><a href="#Response_55"><span class="tocnumber">12.6.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-240"><a href="#Example_57"><span class="tocnumber">12.6.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-241"><a href="#Get_Transaction_Bytes"><span class="tocnumber">12.7</span> <span class="toctext"><b>Get Transaction Bytes</b></span></a>
<ul>
<li class="toclevel-3 tocsection-242"><a href="#Request_58"><span class="tocnumber">12.7.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-243"><a href="#Response_56"><span class="tocnumber">12.7.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-244"><a href="#Example_58"><span class="tocnumber">12.7.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-245"><a href="#Send_Lm"><span class="tocnumber">12.8</span> <span class="toctext"><b>Send Lm</b></span></a>
<ul>
<li class="toclevel-3 tocsection-246"><a href="#Request_59"><span class="tocnumber">12.8.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-247"><a href="#Response_57"><span class="tocnumber">12.8.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-248"><a href="#Example_59"><span class="tocnumber">12.8.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-249"><a href="#Sign_Transation"><span class="tocnumber">12.9</span> <span class="toctext"><b>Sign Transation</b></span></a>
<ul>
<li class="toclevel-3 tocsection-250"><a href="#Request_60"><span class="tocnumber">12.9.1</span> <span class="toctext"><b>Request</b></span></a></li>
<li class="toclevel-3 tocsection-251"><a href="#Response_58"><span class="tocnumber">12.9.2</span> <span class="toctext"><b>Response</b></span></a></li>
<li class="toclevel-3 tocsection-252"><a href="#Example_60"><span class="tocnumber">12.9.3</span> <span class="toctext"><b>Example</b></span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-253"><a href="#Error_Codes"><span class="tocnumber">13</span> <span class="toctext"><b>Error Codes</b></span></a></li>
</ul>
</div>

</td></tr></table>
<h2><span class="mw-headline" id="Description">Description</span></h2>
<p>The LibreMoney API allows interaction with LibreMoney nodes using HTTP GET requests (Except for a few calls that need to be POST). Responses are returned as JSON objects.
</p><p>API calls are made by communicating with LibreMoney nodes on port 7876. In all the examples here, the node is represented as "localhost".  Examples and responses are all formatted for easy reading; line breaks and spaces are not actually used in requests or responses.
</p><p>Many API calls make reference to the Genesis block. FYI, the genesis block's ID is <a rel="nofollow" class="external text" href="http://blocks.nxtcrypto.org/nxt/nxt.cgi?action=1000&amp;blk=2680262203532249785">2680262203532249785</a>
</p><p>All the API calls can be seen and tested at <a rel="nofollow" class="external free" href="http://localhost:7876/test">http://localhost:7876/test</a>
Specific API calls can be seen and tested at <a rel="nofollow" class="external free" href="http://localhost:7876/test?requestType=">http://localhost:7876/test?requestType=</a>&lt;specificRequestType&gt; where &lt;specificRequestType&gt; is the name of specific API call you are looking for
</p>
<h2><span class="mw-headline" id="General_Notes"><b>General Notes</b></span></h2>
<p>All http API requests that create a new transaction will accept either a secretPhrase or a publicKey parameter:
</p>
<ul>
<li> If secretPhrase is supplied, a transaction is created, signed at the server, and broadcast by the server as usual. 
</li>
<li> If a publicKey parameter is supplied as a hex-encoded byte array, the transaction will be prepared by the server and returned in the JSON response as transactionBytes. This byte array can now be signed by the client, and then sent back to the server for broadcasting using the broadcastTransaction API.
</li>
</ul>
<p>All API calls that require an account numbers can have the account number as either account id's or Reed-Solomon addresses
</p>




















<h2><span class="mw-headline" id="Alias_operations"><b>Alias operations</b></span></h2>
<h3><span class="mw-headline" id="Create.2Fassign_alias"><b>Create/assign alias</b></span></h3>
<p>Allows you to create an alias with a single request.  If the alias has already been created, this request will assign a new URI to the alias.
</p>
<h4><span class="mw-headline" id="Request_11"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=setAlias&amp;
     secretPhrase=SECRET&amp;
     aliasName=ALIAS&amp;
     aliasURI=URI&amp;
     fee=FEE&amp;
     deadline=DEADLINE&amp;
     publicKey=PUBKEY&amp;
     referencedTransactionFullHash=TRANSFULLHASH&amp;
     broadcast=BROAD
</pre>
<p>Where:
</p>
<ul>
<li>SECRET is the secret passphrase for the sending account
</li>
<li>ALIAS is the alias you'd like to create
</li>
<li>URI is the alias text (e.g. <a rel="nofollow" class="external free" href="http://www.google.com/">http://www.google.com/</a>)
</li>
<li>FEE is the fee (in MilliLm) for the transaction
</li>
<li>DEADLINE is the deadline for the transaction, in minutes
</li>
<li>PUBKEY is the 64-byte public key associated with the account. (optional)
</li>
<li>TRANSFULLHASH If you want to reference another transaction(optional)
</li>
<li>BROAD true or false if it should be broadcasted (optional)
</li>
</ul>
<h4><span class="mw-headline" id="Response_11"><b>Response</b></span></h4>
<pre>
{
     &quot;transactionId&quot;:       &quot;TXID&quot;
}
{ 
     &quot;fullHash&quot;:                 &quot;FULLHASH&quot;, 
     &quot;signatureHash&quot;:            &quot;SIGHASH&quot;, 
     &quot;transactionBytes&quot;:         &quot;TXBYTES&quot;, 
     &quot;hash&quot;:                     &quot;HASH&quot;, 
     &quot;transaction&quot;:              &quot;TX&quot;, 
     &quot;broadcasted&quot;:              BROAD, 
     &quot;unsignedTransactionBytes&quot;: &quot;UNTXBYTES&quot; 
}
</pre>
<h4><span class="mw-headline" id="Example_11"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=setAlias&amp;
     secretPhrase=123&amp;
     aliasName=Google&amp;
     aliasURI=http://google.com&amp;
     fee=100000000&amp;
     deadline=1440
</pre>
<p>Response:
</p>
<pre>
{ 
     &quot;fullHash&quot;:                 &quot;645853ddc55daa2c948f46520b0630d964ce0f40c0ee03515faffce6259d0bae&quot;, 
     &quot;signatureHash&quot;:            &quot;1e622a64292f8b1fcb1ccf155a42a37a99b89cbcaa725f1200ab55b5ec5f1ca8&quot;, 
     &quot;transactionBytes&quot;:         &quot;0101fe21d700a005668683e673274c671802492d6f54cdc33d247aa426e7ce...&quot;, 
     &quot;hash&quot;:                     &quot;580c1bb70d7bcb1eb967c4e86c6c9bfc481641dcce84300a579caf35840e662a&quot;, 
     &quot;transaction&quot;:              &quot;3218487988112808036&quot;, 
     &quot;broadcasted&quot;:              true, 
     &quot;unsignedTransactionBytes&quot;: &quot;0101fe21d700a005668683e673274c671802492d6f54cdc33d247a...&quot; 
}
</pre>
<p><small><i>Verified 5/20/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_alias"><b>Get alias</b></span></h3>
<p>Retries information about the alias id or alias name that is provided
</p>
<h4><span class="mw-headline" id="Request_12"><b>Request</b></span></h4>
<pre>https://localhost:1400/api?
     requestType=getAlias&amp;
     alias=ALIAS_ID&amp;
     aliasName=ALIAS_NAME
</pre>
<p>Where:
</p>
<ul>
<li>ALIAS_ID is the alias id you want to look up
</li>
<li>ALIAS_NAME is the name of the alias you want to look up
</li>
</ul>
<h4><span class="mw-headline" id="Response_12"><b>Response</b></span></h4>
<pre>
{
     &quot;timestamp&quot;:  TIMESTAMP, 
     &quot;aliasName&quot;:      &quot;ALIAS&quot;, 
     &quot;account&quot;:    &quot;ACCOUNT&quot;,
     &quot;accountRS&quot;:  &quot;ACCOUNTRS&quot;,
     &quot;aliasURI&quot;:        &quot;URI&quot;,
     &quot;alias&quot;:      &quot;ALIAS_ID&quot;
}
</pre>
<p>Where:
</p>
<ul>
<li>TIMESTAMP is the time when the alias was created. This is expressed in seconds since the timestamp of the genesis block
</li>
<li>ALIAS is the name of the alias with the id
</li>
<li>ACCOUNT is the account that own the alias
</li>
<li>ACCOUNTRS is the Reed-Solomon address of the account
</li>
<li>URI is the address the alias points to
</li>
<li>ALIAS_ID is the alias's id
</li>
</ul>
<h4><span class="mw-headline" id="Example_12"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>https://localhost:1400/api?
     requestType=getAlias&amp;
     alias=15515279700680480368
</pre>
<p>Response:
</p>
<pre>
{
     &quot;timestamp&quot;: 2409343, 
     &quot;aliasName&quot;:     &quot;google&quot;, 
     &quot;account&quot;:   &quot;5629477397208681336&quot;,
     &quot;accountRS&quot;: &quot;LMA-FLVS-VRBV-LDPD-6DZ9W&quot;,
     &quot;aliasURI&quot;:       &quot;http://google.com&quot;,
     &quot;alias&quot;: &quot;15515279700680480368&quot;
}
</pre>
<p><small><i>Verified 5/22/14</i></small>
</p><p><br />
</p>
<h3><span class="mw-headline" id="Get_aliases"><b>Get aliases</b></span></h3>
<p>Retries information on all alias for a given account (since timestamp if provided)
</p>
<h4><span class="mw-headline" id="Request_13"><b>Request</b></span></h4>
<pre>https://localhost:1400/api?
     requestType=getAliases&amp;
     account=ACCOUNT&amp;
     timestamp=TIMESTAMP
</pre>
<p>Where:
</p>
<ul>
<li>ACCOUNT is the account you want to lookup aliases for
</li>
<li>TIMESTAMP is the time you want to see aliases since. This is expressed in seconds since the timestamp of the genesis block (optional)
</li>
</ul>
<h4><span class="mw-headline" id="Response_13"><b>Response</b></span></h4>
<pre>
{
     &quot;aliases&quot;: [
     {
          &quot;timestamp&quot;:  TIMESTAMP, 
          &quot;aliasName&quot;:      &quot;ALIAS&quot;, 
          &quot;account&quot;:    &quot;ACCOUNT&quot;,
          &quot;accountRS&quot;:  &quot;ACCOUNTRS&quot;,
          &quot;aliasURI&quot;:        &quot;URI&quot;,
          &quot;alias&quot;:      &quot;ALIAS_ID&quot;
     },
     {
          ...
     }]
}
</pre>
<p>Where:
</p>
<ul>
<li>TIMESTAMP is the time when the alias was created. This is expressed in seconds since the timestamp of the genesis block
</li>
<li>ALIAS is the name of the alias
</li>
<li>ACCOUNT is the account that own the alias
</li>
<li>ACCOUNTRS is the Reed-Solomon address of the account
</li>
<li>URI is the address the alias points to
</li>
<li>ALIAS_ID is the alias's id
</li>
</ul>
<h4><span class="mw-headline" id="Example_13"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>https://localhost:1400/api?
     requestType=getAliases&amp;
     account=5629477397208681336
</pre>
<p>Response:
</p>
<pre>
{
    &quot;aliases&quot;: [
        {
            &quot;timestamp&quot;: 2409602,
            &quot;aliasName&quot;: &quot;promotion&quot;,
            &quot;alias&quot;: &quot;11086300057073013586&quot;,
            &quot;aliasURI&quot;: &quot;&quot;,
            &quot;accountRS&quot;: &quot;LMA-FLVS-VRBV-LDPD-6DZ9W&quot;,
            &quot;account&quot;: &quot;5629477397208681336&quot;
        },
        {
            ...
        }]
}
</pre>
<p><small><i>Verified 5/22/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_alias_ID_.28Depreciated.29"><b>Get alias ID (Depreciated)</b></span></h3>
<p>Retries the alias ID for a specific alias.  Implemented in version 0.5.4e. Depreciated in version 1.1.4
</p>
<h4><span class="mw-headline" id="Request_14"><b>Request</b></span></h4>
<pre>https://localhost:1400/api?
     requestType=getAliasId&amp;
     alias=ALIAS
</pre>
<p>Where:
</p>
<ul>
<li>ALIAS is the alias you want to look up
</li>
</ul>
<h4><span class="mw-headline" id="Response_14"><b>Response</b></span></h4>
<pre>
{
     &quot;id&quot;:       &quot;ALIAS_ID&quot;
}
</pre>
<h4><span class="mw-headline" id="Example_14"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>https://localhost:1400/api?
     requestType=getAliasId&amp;
     alias=google
</pre>
<p>Response:
</p>
<pre>
{
     &quot;id&quot;:       &quot;15515279700680480368&quot;
}
</pre>
<p><small><i>Verified 5/20/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_alias_IDs_.28Depreciated.29"><b>Get alias IDs (Depreciated)</b></span></h3>
<p>Tells you all transactionIDs of aliases after a specified time in the blockchain. Depreciated in version 1.1.4.
</p>
<h4><span class="mw-headline" id="Request_15"><b>Request</b></span></h4>
<pre>https://localhost:1400/api?
     requestType=getAliasIds&amp;
     timestamp=TIMESTAMP
</pre>
<p>Where:
</p>
<ul>
<li>TIMESTAMP is the time from which you'd like to see defined aliases. This is expressed in seconds since the timestamp of the genesis block
</li>
</ul>
<h4><span class="mw-headline" id="Response_15"><b>Response</b></span></h4>
<pre>
{
     &quot;aliasIds&quot;:       [ARRAY_OF_ALIAS_IDs]
}
</pre>
<h4><span class="mw-headline" id="Example_15"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>https://localhost:1400/api?
     requestType=getAliasIds&amp;
     timestamp=30000
</pre>
<p>Response:
</p>
<pre>
{
     &quot;aliasIds&quot;:
               [&quot;12219820415480193342&quot;,
               &quot;2284413548488744428&quot;,
               &quot;6882945328050210195&quot;...]
}
</pre>
<p><small><i>Verified 5/20/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_alias_URI_.28Depreciated.29"><b>Get alias URI (Depreciated)</b></span></h3>
<p>Tells you the target URI of an alias. Depreciated in version 1.1.4.
</p>
<h4><span class="mw-headline" id="Request_16"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getAliasURI&amp;
     alias=ALIAS
</pre>
<p>Where:
</p>
<ul>
<li>ALIAS is the alias whose target you'd like to see
</li>
</ul>
<h4><span class="mw-headline" id="Response_16"><b>Response</b></span></h4>
<pre>
{
     &quot;uri&quot;:       &quot;URI_ASSIGNED_TO_ALIAS&quot;
}
</pre>
<p>Note:  Returned URIs will be escaped!
</p>
<h4><span class="mw-headline" id="Example_16"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getAliasURI&amp;
     alias=Google
</pre>
<p>Response:
</p>
<pre>{
     &quot;uri&quot;:       &quot;http:\/\/google.com&quot;
}
</pre>
<p><small><i>Verified 5/20/14</i></small>
</p>
<h3><span class="mw-headline" id="List_Aliases_.28Depreciated.29"><b>List Aliases (Depreciated)</b></span></h3>
<p>Gives you a list of aliases owned by an account. Depreciated in version 1.1.4.
</p>
<h4><span class="mw-headline" id="Request_17"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=listAccountAliases&amp;
     account=ACCOUNT
</pre>
<p>Where:
</p>
<ul>
<li> ACCOUNT is an account number
</li>
</ul>
<h4><span class="mw-headline" id="Response_17"><b>Response</b></span></h4>
<pre>
{
     &quot;aliases&quot;: 
          [ 
               { 
                    &quot;alias&quot;:        &quot;ALIAS&quot;,  
                    &quot;uri&quot;:          &quot;URI&quot;,
                    &quot;account&quot;:      &quot;ACCOUNT&quot;,
                    &quot;timestamp&quot;:    &quot;TIMESTAMP&quot;
               } 
          ] 
}
</pre>
<h4><span class="mw-headline" id="Example_17"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=listAccountAliases&amp;
     account=17157779854388545959</pre>
<p>Response:
</p>
<pre>
{
     &quot;aliases&quot;:
          [
               {
                    &quot;alias&quot;:     &quot;testalias&quot;,
                    &quot;uri&quot;:       &quot;1337&quot;,
                    &quot;account&quot;:   &quot;17157779854388545959&quot;,
                    &quot;timestamp&quot;:  2920016
               }
          ]
}
</pre>
<p><small><i>Verified 5/20/14</i></small>
</p>
<h2><span class="mw-headline" id="Arbitrary_Message_System_Operations"><b>Arbitrary Message System Operations</b></span></h2>
<h3><span class="mw-headline" id="Send_Message"><b>Send Message</b></span></h3>
<p>Creates an Arbitrary Message transaction.
</p>
<h4><span class="mw-headline" id="Request_18"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=sendMessage&amp;
     secretPhrase=SECRET&amp;
     recipient=RECIP_ACCOUNT&amp;
     fee=FEE&amp;
     message=HEX_STRING&amp;
     deadline=DEADLINE&amp;
     referencedTransaction=REFTXID&amp;
     broadcast=BROAD
</pre>
<p>Where:
</p>
<ul>
<li>SECRET is the secret passphrase for the sending account
</li>
<li>RECIP_ACCOUNT is the account number of the receiver account
</li>
<li>HEX_STRING is the hex-encoded message.  The content and encryption method for this string are not predefined; this is up to the developer.  The message size is currently capped at 1000 Bytes.
</li>
<li>FEE is the fee (in MilliLm) for the transaction
</li>
<li>DEADLINE is the transaction deadline, in minutes
</li>
<li>REFTXID is a previous transaction ID that you want to reference. This creates a chained transaction, meaning that the current transaction cannot be confirmed unless the referenced transaction is also confirmed. (optional)
</li>
<li>BROAD is if you want the transaction broadcasted or not (optional) 
</li>
</ul>
<h4><span class="mw-headline" id="Response_18"><b>Response</b></span></h4>
<pre>
{
     &quot;fullHash&quot;:                 &quot;FULLHASH&quot;, 
     &quot;signatureHash&quot;:            &quot;SIGHASH&quot;, 
     &quot;transactionBytes&quot;:         &quot;TXBYTES&quot;, 
     &quot;hash&quot;:                     &quot;HASH&quot;, 
     &quot;transaction&quot;:              &quot;TX&quot;, 
     &quot;broadcasted&quot;:              BROAD, 
     &quot;unsignedTransactionBytes&quot;: &quot;UNTXBYTES&quot; 
}
</pre>
<p>Where:
</p>
<ul>
<li>FULLHASH is the full hash of the transaction
</li>
<li>SIGHASH is a sha256 hash of the transaction signature. Useful for escrow transactions
</li>
<li>TXBYTES is the bytecode of a transaction
</li>
<li>HASH is hash of all transaction fields excluding the signature
</li>
<li>TX is the ID of the transaction
</li>
<li>BROAD is if the transaction was broadcasted or not
</li>
<li>UNTXBYTES is the transaction bytes with the signature part being replaced with zeros
</li>
</ul>
<h4><span class="mw-headline" id="Example_18"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=sendMessage&amp;
     secretPhrase=MySuperSecretPasswordThatYouDoNotKnow&amp;
     recipient=501860284368&amp;
     message= 6602b1611f921092bdf2a89fc97148ec9684066776b83fd3&amp;
     deadline=720&amp;
     referencedTransaction=8815617645011985536
</pre>
<p>Response:
</p>
<pre>
{ 
     &quot;fullHash&quot;:                 &quot;d56ade2c322083d76ebcdb9f9ef18d7d52c6d105f67be040cc423c7a41a47aea&quot;, 
     &quot;signatureHash&quot;:            &quot;458514e72f4272c789f99201c27cff611460de10fe484b474166c1199c23e754&quot;, 
     &quot;transactionBytes&quot;:         &quot;0100471ddb00a005668683e673274c671802492d6f54cdc33d247aa426e7cef...&quot;, 
     &quot;hash&quot;:                     &quot;36a0dc90736d95ad5302f078d5db6fc48e5c087b76da65944f7fe2836b73abcd&quot;, 
     &quot;transaction&quot;:              &quot;15529291339976829653&quot;, 
     &quot;broadcasted&quot;:              true, 
     &quot;unsignedTransactionBytes&quot;: &quot;0100471ddb00a005668683e673274c671802492d6f54cdc33d247aa4...&quot; 
}
</pre>
<p><small><i>Verified 5/9/14</i></small>
</p>
<h2><span class="mw-headline" id="Block_operations"><b>Block operations</b></span></h2>
<h3><span class="mw-headline" id="Get_Block"><b>Get Block</b></span></h3>
<p>Retrieves block data.
</p>
<h4><span class="mw-headline" id="Request_19"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getBlock&amp;
     block=BLOCKADDRESS
</pre>
<p>Where:
</p>
<ul>
<li>BLOCKADDRESS is the LibreMoney block address
</li>
</ul>
<h4><span class="mw-headline" id="Response_19"><b>Response</b></span></h4>
<pre>
{
     &quot;generatorRS&quot;: &quot;ACCOUNTRS&quot;,
     &quot;previousBlockHash&quot;:&quot;32BytesRepresentedInHexadecimalForm&quot;,
     &quot;payloadLength&quot;:PAYLOADLEN,
     &quot;totalAmount&quot;:TOTAL,
     &quot;generationSignature&quot;:&quot;64BytesRepresentedInHexadecimalForm&quot;,
     &quot;generator&quot;:&quot;ACCOUNT&quot;,
     &quot;baseTarget&quot;:&quot;BASETARGET&quot;,
     &quot;payloadHash&quot;:&quot;32BytesRepresentedInHexadecimalForm&quot;,
     &quot;nextBlock&quot;:&quot;NEXTBLOCK&quot;,
     &quot;numberOfTransactions&quot;:NUMTX,
     &quot;blockSignature&quot;:&quot;64BytesRepresentedInHexadecimalForm&quot;,
     &quot;transactions&quot;:
          [
               &quot;TRANSACTION1&quot;,
               &quot;TRANSACTION2&quot;
          ],
     &quot;version&quot;:VERSION,
     &quot;totalFee&quot;:&quot;FEE&quot;,
     &quot;previousBlock&quot;:&quot;PREVBLOCK&quot;,
     &quot;height&quot;:HEIGHT,
     &quot;timestamp&quot;:TIME
}
</pre>
<p>Where:
</p>
<ul>
<li> HEIGHT is the block height
</li>
<li> ACCOUNTRS is the Reed-Solomon address of the account
</li>
<li> "generator" is the account that generated the block.
</li>
<li> ACCOUNT is an account number
</li>
<li> TIME is the time in seconds that the block was generated; 0 is the time of creation of the genesis block timestamp.
</li>
<li> NUMTX is the number of transactions in the block
</li>
<li> TOTAL is the total MilliLm in the block
</li>
<li> FEE is the MilliLm fee for the block
</li>
<li> VERSION is the block version
</li>
<li> BASETARGET is the hash target for the block generation
</li>
<li> PAYLOADLEN = "numberOfTransactions" * 128 Bytes.
</li>
<li> "previousBlock" is the previous block address. Empty for the genesis block.
</li>
<li> PREVBLOCK is the previous block address
</li>
<li> "nextBlock" is the next block address. Blank for the last block in the blockchain.
</li>
<li> NEXTBLOCK is the next block address
</li>
<li> "transactions" is an array of transaction ids, representing the transactions in the block.
</li>
<li> TRANSACTIONX are ID numbers of transactions in the block
</li>
</ul>
<h4><span class="mw-headline" id="Example_19"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getBlock&amp;
     block=3081264592726137683
</pre>
<p>Response:
</p>
<pre>
{
     &quot;generatorRS&quot;: &quot;LMA-25TQ-G377-8TJ9-EVPAD&quot;,
     &quot;previousBlockHash&quot;:&quot;d2df42de82c3fbc808715ce9738630b31bece282864fafd164b0d4cf5b0e9e3e&quot;,
     &quot;payloadLength&quot;:256,
     &quot;totalAmount&quot;:&quot;16400300000000&quot;,
     &quot;generationSignature&quot;:&quot;5beac191d5a20b443b9fdd83cfeb3abddfb31294c1999a85c75955a4c99b3f3c&quot;,
     &quot;generator&quot;:&quot;14241151062656421686&quot;,
     &quot;baseTarget&quot;:&quot;191236740&quot;,
     &quot;payloadHash&quot;:&quot;fc153c1f3d18af9e5a60be42bee896b19089a4b1e391179c98c2a9d2d383275f&quot;,
     &quot;nextBlock&quot;:&quot;5728643978405745233&quot;,
     &quot;numberOfTransactions&quot;:2,
     &quot;blockSignature&quot;:&quot;5bf8d6f39c6303815dbf591667d613175e916520052f21ffaddec818e2e4ab0cca07f17b0dea8352e837aa89e774cd95dbeb5a2bdab1f1f50f5955d1a3718375&quot;,
     &quot;transactions&quot;:
          [
               &quot;10431005438877942947&quot;,
               &quot;16244324356084723003&quot;
          ],
     &quot;version&quot;:2,
     &quot;totalFee&quot;:&quot;200000000&quot;,
     &quot;previousBlock&quot;:&quot;14482383993582051282&quot;,
     &quot;height&quot;:115147,
     &quot;timestamp&quot;:12439666
}
</pre>
<p><small><i>Verified 5/1/14</i></small>
</p>
<h2><span class="mw-headline" id="Asset_exchange_operations"><b>Asset exchange operations</b></span></h2>
<h3><span class="mw-headline" id="Issue_asset"><b>Issue asset</b></span></h3>
<p>Creates an asset on the exchange
</p>
<h4><span class="mw-headline" id="Request_20"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=issueAsset&amp; 
     secretPhrase=SECRET&amp; 
     name=ASSETNAME&amp; 
     description=DESCRIPTION&amp; 
     quantityQNT=QTY&amp;
     decimals=DECIMALS&amp;
     fee=FEE&amp;
     deadline=DEADLINE&amp; 
     referencedTransaction=REFTX&amp;
     broadcast=BROAD
</pre>
<p>Where:
</p>
<ul>
<li> SECRET is the secret passphrase of the account issuing the asset.
</li>
<li> ASSETNAME is the name you'd like the asset to have
</li>
<li> DESCRIPTION is a description of the asset. This text should be URL-encoded, but can contain any Unicode characters, and has a maximum length of 1000. (optional)
</li>
<li> QTY is the amount
</li>
<li> DECIMALS is the number of digits after the decimal point for such an asset (i.e. for USD it will be 2, for Bitcoin it will be 8) 
</li>
<li> FEE is the fee (in MilliLm) associated with the transaction.  Currently the minimum fee for issuing an asset is 1000 LibreMoney
</li>
<li> DEADLINE is the deadline for the transaction to get a confirmation, expressed in minutes 
</li>
<li> REFTX is a previous transaction ID that you want to reference.  This creates a chained transaction, meaning that the current transaction cannot be confirmed unless the referenced transaction is also confirmed. (optional)
</li>
<li> BROAD is if you want the transaction broadcasted or not (optional)
</li>
</ul>
<h4><span class="mw-headline" id="Response_20"><b>Response</b></span></h4>
<p>The response returns a transaction ID, which is also the asset ID.
</p>
<pre>
{
     &quot;fullHash&quot;:                 &quot;FULLHASH&quot;, 
     &quot;signatureHash&quot;:            &quot;SIGHASH&quot;, 
     &quot;transactionBytes&quot;:         &quot;TXBYTES&quot;, 
     &quot;hash&quot;:                     &quot;HASH&quot;, 
     &quot;transaction&quot;:              &quot;TX&quot;, 
     &quot;broadcasted&quot;:              BROAD, 
     &quot;unsignedTransactionBytes&quot;: &quot;UNTXBYTES&quot; 
}
</pre>
<p>Where:
</p>
<ul>
<li>FULLHASH is the full hash of the transaction
</li>
<li>SIGHASH is a sha256 hash of the transaction signature. Useful for escrow transactions
</li>
<li>TXBYTES is the bytecode of a transaction
</li>
<li>HASH is hash of all transaction fields excluding the signature
</li>
<li>TX is the ID of the transaction
</li>
<li>BROAD is if the transaction was broadcasted or not
</li>
<li>UNTXBYTES is the transaction bytes with the signature part being replaced with zeros
</li>
</ul>
<h4><span class="mw-headline" id="Example_20"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=issueAsset&amp;
     secretPhrase=123&amp;
     name=turtleCoin&amp;
     description=This+is+Turtlecoin+issued+by+Tommy-Turtle&amp;
     quantityQNT=500&amp; 
     deadline=1440&amp;
     fee=1000
</pre>
<p>Response:
</p>
<pre>
{ 
     &quot;fullHash&quot;:                 &quot;ebccb29dc4286a4a55ad9f0a4334cd3b0df75c26fcaf4a6ee3b62832f8f1a403&quot;, 
     &quot;signatureHash&quot;:            &quot;adb63682ac9598b7ea951df09535ee662b4b2f977e4f8a3f1a1aa0fd1f3e3da1&quot;, 
     &quot;transactionBytes&quot;:         &quot;0200701fdb00a005668683e673274c671802492d6f54cdc33d247aa426e7cef83776...&quot;, 
     &quot;hash&quot;:                     &quot;f1fa3f7b8ca5dd38d529e9f9a052aac0f96a7e5a4ef57cdabb0e4633cb4fcd89&quot;, 
     &quot;transaction&quot;:              &quot;5362143131262438635&quot;, 
     &quot;broadcasted&quot;:              true, 
     &quot;unsignedTransactionBytes&quot;: &quot;0200701fdb00a005668683e673274c671802492d6f54cdc33d247aa426e7ce...&quot; 
}
</pre>
<p><small><i>Verified 5/9/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_asset_IDs"><b>Get asset IDs</b></span></h3>
<p>Obtain a list of all of the asset IDs on the exchange
</p>
<h4><span class="mw-headline" id="Request_21"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getAssetIds
</pre>
<h4><span class="mw-headline" id="Response_21"><b>Response</b></span></h4>
<pre>
{
     &quot;assetIds&quot;:       [ARRAY_OF_ASSET_IDs]
}
</pre>
<h4><span class="mw-headline" id="Example_21"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getAssetIds
</pre>
<p>Response:
</p>
<pre>
{
     &quot;assetIds&quot;:
          [
               &quot;923860986719836&quot;, 
               &quot;46556984592384756298&quot;, 
               &quot;87918658237693184156&quot;,
               ...
          ]
}
</pre>
<p><small><i>Verified 5/6/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_asset"><b>Get asset</b></span></h3>
<p>Obtain information associated with an asset ID
</p>
<h4><span class="mw-headline" id="Request_22"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getAsset&amp; 
     asset=ASSETID
</pre>
<p>Where:
</p>
<ul>
<li>ASSETID is the asset ID you want to look up
</li>
</ul>
<h4><span class="mw-headline" id="Response_22"><b>Response</b></span></h4>
<pre>
{
     &quot;account&quot;:          &quot;ACCOUNT&quot;, 
     &quot;accountRS&quot;:        &quot;ACCOUNTRS&quot;,
     &quot;name&quot;:             &quot;NAME&quot;, 
     &quot;description&quot;:      &quot;DESCRIPTION&quot;, 
     &quot;quantityQNT&quot;:       QTY,
     &quot;asset&quot;:             ASSETID,
     &quot;decimals&quot;:          DECIMALS, 
     &quot;numberOfTrades&quot;:    NUMTRADES
}
</pre>
<p>Where:
</p>
<ul>
<li>ACCOUNT is the account that issued the asset
</li>
<li>ACCOUNTRS is the Reed-Solomon address of the account. 
</li>
<li>NAME is the asset name
</li>
<li>DESCRIPTION is the asset description.  Will not be returned if the description is equal to 0.
</li>
<li>QTY is the asset quantity
</li>
<li>ASSETID is the asset ID you want to look up
</li>
<li>DECIMALS is the number of digits after the decimal point for such an asset (i.e. for USD it will be 2, for Bitcoin it will be 8)
</li>
<li>NUMTRADES is the number of trades of this asset
</li>
</ul>
<h4><span class="mw-headline" id="Example_22"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getAsset&amp; 
     asset=46556984592384756298
</pre>
<p>Response:
</p>
<pre>
{
     &quot;account&quot;:           &quot;334765832685676&quot;,
     &quot;accountRS&quot;:         &quot;LMA-DE2F-W76R-GL25-HMFPR&quot;,
     &quot;name&quot;:              &quot;cfbBTCx1&quot;, 
     &quot;description&quot;:       &quot;This is BTC issued by Come-from-Beyond&quot;, 
     &quot;quantityQNT&quot;:       500,
     &quot;asset&quot;:             46556984592384756298,
     &quot;decimals&quot;:          6, 
     &quot;numberOfTrades&quot;:    0
}
</pre>
<p><small><i>Verified 5/13/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_assets"><b>Get assets</b></span></h3>
<p>Obtain information associated with some asset IDs
</p>
<h4><span class="mw-headline" id="Request_23"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getAssets&amp; 
     assets=ASSETID&amp;
     assets=ASSETID&amp;
     ...
</pre>
<p>Where:
</p>
<ul>
<li>ASSETID is the asset ID you want to look up
</li>
</ul>
<h4><span class="mw-headline" id="Response_23"><b>Response</b></span></h4>
<pre>
{
     &quot;assets&quot;: [ {
          &quot;account&quot;:          &quot;ACCOUNT&quot;, 
          &quot;accountRS&quot;:        &quot;ACCOUNTRS&quot;,
          &quot;name&quot;:             &quot;NAME&quot;, 
          &quot;description&quot;:      &quot;DESCRIPTION&quot;, 
          &quot;quantityQNT&quot;:       QTY,
          &quot;asset&quot;:             ASSETID,
          &quot;decimals&quot;:          DECIMALS, 
          &quot;numberOfTrades&quot;:    NUMTRADES
     },
     {
          ...
     }]
}
</pre>
<p>Where:
</p>
<ul>
<li>ACCOUNT is the account that issued the asset
</li>
<li>ACCOUNTRS is the Reed-Solomon address of the account. 
</li>
<li>NAME is the asset name
</li>
<li>DESCRIPTION is the asset description.  Will not be returned if the description is equal to 0.
</li>
<li>QTY is the asset quantity
</li>
<li>ASSETID is the asset ID you want to look up
</li>
<li>DECIMALS is the number of digits after the decimal point for such an asset (i.e. for USD it will be 2, for Bitcoin it will be 8)
</li>
<li>NUMTRADES is the number of trades of this asset
</li>
</ul>
<h4><span class="mw-headline" id="Example_23"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getAssets&amp; 
     assets=46556984592384756298
</pre>
<p>Response:
</p>
<pre>
{
     &quot;assets&quot;: [ {
          &quot;account&quot;:           &quot;334765832685676&quot;, 
          &quot;accountRS&quot;:         &quot;LMA-DE2F-W76R-GL25-HMFPR&quot;,
          &quot;name&quot;:              &quot;cfbBTCx1&quot;, 
          &quot;description&quot;:       &quot;This is BTC issued by Come-from-Beyond&quot;, 
          &quot;quantityQNT&quot;:       500,
          &quot;asset&quot;:             46556984592384756298,
          &quot;decimals&quot;:          6, 
          &quot;numberOfTrades&quot;:    0
     } ]
}
</pre>
<p><small><i>Verified 5/13/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_all_assets"><b>Get all assets</b></span></h3>
<p>Obtain information associated with all the assets in the exchange
</p>
<h4><span class="mw-headline" id="Request_24"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getAllAssets
</pre>
<h4><span class="mw-headline" id="Response_24"><b>Response</b></span></h4>
<pre>
{
     &quot;assets&quot;: 
     [ { 
          &quot;account&quot;:           &quot;ACCOUNT&quot;, 
          &quot;accountRS&quot;:         &quot;ACCOUNTRS&quot;
          &quot;name&quot;:              &quot;NAME&quot;, 
          &quot;description&quot;:       &quot;DESCRIPTION&quot;, 
          &quot;quantityQNT&quot;:       QTY,
          &quot;asset&quot;:             ASSETID,
          &quot;decimals&quot;:          DECIMALS, 
          &quot;numberOfTrades&quot;:    NUMTRADES
     } ] 
}
</pre>
<p>Where:
</p>
<ul>
<li>ACCOUNT is the account that issued the asset
</li>
<li>ACCOUNTRS is the Reed-Solomon address of the account
</li>
<li>NAME is the asset name
</li>
<li>DESCRIPTION is the asset description.  Will not be returned if the description is equal to 0.
</li>
<li>QTY is the asset quantity
</li>
<li>ASSETID is the asset ID you want to look up
</li>
<li>DECIMALS is the number of digits after the decimal point for such an asset (i.e. for USD it will be 2, for Bitcoin it will be 8) 
</li>
<li>NUMTRADES is the number of trades of this asset
</li>
</ul>
<h4><span class="mw-headline" id="Example_24"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getAllAssets
</pre>
<p>Response:
</p>
<pre>
{
     &quot;assets&quot;: 
     [ { 
          &quot;decimals&quot;:       7, 
          &quot;numberOfTrades&quot;: 0, 
          &quot;asset&quot;:          &quot;3283533989023503499&quot;, 
          &quot;quantityQNT&quot;:    &quot;132249500000000&quot;, 
          &quot;description&quot;:    &quot;CCGGUQMJKOMUCLBIEGGTKCQVSBSJAZSE&quot;, 
          &quot;name&quot;:           &quot;GZSHFQY&quot;, 
          &quot;account&quot;:        &quot;14136559604731496960&quot;,
          &quot;accountRS&quot;:      &quot;LMA-KRDB-ZFA3-RNDV-AALNT&quot;
       },
       { 
          &quot;decimals&quot;:       6, 
          &quot;numberOfTrades&quot;: 0, 
          &quot;asset&quot;:          &quot;5008310702202713285&quot;, 
          &quot;quantityQNT&quot;:    &quot;994512000000000&quot;, 
          &quot;description&quot;:    &quot;QESZUYEJCGBGHBVXIRC&quot;, 
          &quot;name&quot;:           &quot;GWNU&quot;, 
          &quot;account&quot;:        &quot;14136559604731496960&quot;,
          &quot;accountRS&quot;:      &quot;LMA-UWKJ-GFEV-AGY4-5C4YS&quot;
       },
       ...
     ]
}
</pre>
<p><small><i>Verified 5/13/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_assets_by_name_.28Depreciated.29"><b>Get assets by name (Depreciated)</b></span></h3>
<p>Obtain information associated with an asset name. Depreciated in version 1.1.4
</p>
<h4><span class="mw-headline" id="Request_25"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getAssetsByName&amp; 
     assetName=ASSET
</pre>
<p>Where:
</p>
<ul>
<li>ASSET is the asset name you want to look up
</li>
</ul>
<h4><span class="mw-headline" id="Response_25"><b>Response</b></span></h4>
<pre>
{
     &quot;assets&quot;: 
     [ { 
          &quot;account&quot;:           &quot;ACCOUNT&quot;,
          &quot;accountRS&quot;:         &quot;ACCOUNTRS&quot;
          &quot;name&quot;:              &quot;NAME&quot;, 
          &quot;description&quot;:       &quot;DESCRIPTION&quot;, 
          &quot;quantityQNT&quot;:       QTY,
          &quot;asset&quot;:             ASSETID,
          &quot;decimals&quot;:          DECIMALS, 
          &quot;numberOfTrades&quot;:    NUMTRADES
     } ] 
}
</pre>
<p>Where:
</p>
<ul>
<li>ACCOUNT is the account that issued the asset
</li>
<li>ACCOUNTRS is the Reed-Solomon address of the account
</li>
<li>NAME is the asset name
</li>
<li>DESCRIPTION is the asset description.  Will not be returned if the description is equal to 0.
</li>
<li>QTY is the asset quantity
</li>
<li>ASSETID is the asset ID you want to look up
</li>
<li>DECIMALS is the number of digits after the decimal point for such an asset (i.e. for USD it will be 2, for Bitcoin it will be 8) 
</li>
<li>NUMTRADES is the number of trades of this asset
</li>
</ul>
<h4><span class="mw-headline" id="Example_25"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getAssetsByName&amp; 
     assetName=GZSHFQY
</pre>
<p>Response:
</p>
<pre>
{
     &quot;assets&quot;: 
     [ { 
          &quot;decimals&quot;:       7, 
          &quot;numberOfTrades&quot;: 0, 
          &quot;asset&quot;:          &quot;3283533989023503499&quot;, 
          &quot;quantityQNT&quot;:    &quot;132249500000000&quot;, 
          &quot;description&quot;:    &quot;CCGGUQMJKOMUCLBIEGGTKCQVSBSJAZSE&quot;, 
          &quot;name&quot;:           &quot;GZSHFQY&quot;, 
          &quot;account&quot;:        &quot;14136559604731496960&quot;,
          &quot;accountRS&quot;:      &quot;LMA-UWKJ-GFEV-AGY4-5C4YS&quot;
     } ] 
}
</pre>
<p><small><i>Verified 5/20/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_assets_by_issuer"><b>Get assets by issuer</b></span></h3>
<p>Get all assets that a specified account has created
</p>
<h4><span class="mw-headline" id="Request_26"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getAssetsByIssuer&amp; 
     account=ACCOUNT
</pre>
<p>Where:
</p>
<ul>
<li>ACCOUNT is the account that issued the asset
</li>
</ul>
<h4><span class="mw-headline" id="Response_26"><b>Response</b></span></h4>
<pre>
{
     &quot;assets&quot;: 
     [ { 
          &quot;account&quot;:         &quot;ACCOUNT&quot;, 
          &quot;accountRS&quot;:       &quot;ACCOUNTRS&quot;,
          &quot;name&quot;:            &quot;NAME&quot;, 
          &quot;description&quot;:     &quot;DESCRIPTION&quot;, 
          &quot;quantityQNT&quot;:     QTY,
          &quot;asset&quot;:           ASSETID,
          &quot;decimals&quot;:        DECIMALS, 
          &quot;numberOfTrades&quot;:  NUMTRADES
     } ] 
}
</pre>
<p>Where:
</p>
<ul>
<li>ACCOUNT is the account that issued the asset
</li>
<li>ACCOUNTRS is the Reed-Solomon address of the account
</li>
<li>NAME is the asset name
</li>
<li>DESCRIPTION is the asset description.  Will not be returned if the description is equal to 0.
</li>
<li>QTY is the asset quantity
</li>
<li>ASSETID is the asset ID you want to look up
</li>
<li>DECIMALS is the number of digits after the decimal point for such an asset (i.e. for USD it will be 2, for Bitcoin it will be 8) 
</li>
<li>NUMTRADES is the number of trades of this asset
</li>
</ul>
<h4><span class="mw-headline" id="Example_26"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getAssetsByIssuer&amp; 
     account=1562462127635514638
</pre>
<p>Response:
</p>
<pre>
{
     &quot;assets&quot;: 
     [ { 
          &quot;decimals&quot;:           7, 
          &quot;numberOfTrades&quot;:     0, 
          &quot;asset&quot;:             &quot;3283533989023503499&quot;, 
          &quot;quantityQNT&quot;:       &quot;132249500000000&quot;, 
          &quot;description&quot;:       &quot;CCGGUQMJKOMUCLBIEGGTKCQVSBSJAZSE&quot;, 
          &quot;name&quot;:              &quot;GZSHFQY&quot;, 
          &quot;accountRS&quot;:         &quot;LMA-GKAG-2VGD-U473-3VRDD&quot;,
          &quot;account&quot;:           &quot;1562462127635514638&quot;
     } ] 
}
</pre>
<p><small><i>Verified 5/9/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_all_trades"><b>Get all trades</b></span></h3>
<p>Obtain all trades starting from a specified time
</p>
<h4><span class="mw-headline" id="Request_27"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getAllTrades&amp; 
     timestamp=TIME
</pre>
<p>Where:
</p>
<ul>
<li>TIME is expressed in seconds since the genesis block. Setting this to 0 will give you all of the trades (optional)
</li>
</ul>
<h4><span class="mw-headline" id="Response_27"><b>Response</b></span></h4>
<pre>
{
     &quot;trades&quot;: [
     { 
          &quot;timestamp&quot;:   TIME, 
          &quot;price&quot;:    &quot;PRICE&quot;, 
          &quot;asset&quot;:       &quot;ASSETID&quot;, 
          &quot;quantityQNT&quot;: &quot;QTY&quot;, 
          &quot;block&quot;:       &quot;BLOCK&quot;, 
          &quot;askOrder&quot;:    &quot;ASK&quot;, 
          &quot;bidOrder&quot;:    &quot;BID&quot; 
     },
     {
          ...
     }
     ]
}
</pre>
<p>Where:
</p>
<ul>
<li> TIME is the time expressed in seconds since the genesis block of the trade
</li>
<li> ASSETID is the ID of the asset
</li>
<li> QTY is the order quantity
</li>
<li> PRICE is the price, expressed in MilliLm
</li>
<li> BLOCK is the block of the trade
</li>
<li> ASK is the ask order ID
</li>
<li> BID is the bid order ID
</li>
</ul>
<h4><span class="mw-headline" id="Example_27"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getAllTrades
</pre>
<p>Response:
</p>
<pre>
{
     &quot;trades&quot;: [ 
     { 
          &quot;timestamp&quot;:   13530463, 
          &quot;price&quot;:    &quot;2500000000&quot;, 
          &quot;asset&quot;:       &quot;13920592454636198263&quot;, 
          &quot;quantityQNT&quot;: &quot;2&quot;, 
          &quot;block&quot;:       &quot;1942829179466651543&quot;, 
          &quot;askOrder&quot;:    &quot;16791208091984728819&quot;, 
          &quot;bidOrder&quot;:    &quot;12730658526877674075&quot; 
     },
     {
          ...
     }
     ]
}
</pre>
<p><small><i>Verified 5/8/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_trades"><b>Get trades</b></span></h3>
<p>Obtain trade information associated with a specified asset ID
</p>
<h4><span class="mw-headline" id="Request_28"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getTrades&amp; 
     asset=ASSETID&amp;
     firstIndex=RANGE_START
     lastIndex=RANGE_END
</pre>
<p>Where:
</p>
<ul>
<li>ASSETID is the asset ID you want to look up
</li>
<li>RANGE_START is the index number of the earliest trade you want to list.  If omitted, the default is 0
</li>
<li>RANGE_END is the index number of the most recent trade you want to list.  If omitted, the default is 2<sup>32</sup>-1
</li>
</ul>
<h4><span class="mw-headline" id="Response_28"><b>Response</b></span></h4>
<pre>
{
     &quot;trades&quot;: [
     { 
          &quot;timestamp&quot;:   TIME, 
          &quot;price&quot;:    &quot;PRICE&quot;, 
          &quot;asset&quot;:       &quot;ASSETID&quot;, 
          &quot;quantityQNT&quot;: &quot;QTY&quot;, 
          &quot;block&quot;:       &quot;BLOCK&quot;, 
          &quot;askOrder&quot;:    &quot;ASK&quot;, 
          &quot;bidOrder&quot;:    &quot;BID&quot; 
     },
     {
          ...
     }
     ]
}
</pre>
<p>Where:
</p>
<ul>
<li>TIME is the time expressed in seconds since the genesis block of the trade
</li>
<li>ASSETID is the ID of the asset
</li>
<li>QTY is the order quantity
</li>
<li>PRICE is the price, expressed in MilliLm
</li>
<li>BLOCK is the block of the trade
</li>
<li>ASK is the ask order ID
</li>
<li>BID is the bid order ID
</li>
</ul>
<h4><span class="mw-headline" id="Example_28"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getTrades&amp; 
     asset=14269709746849295412&amp;
     firstIndex=0
</pre>
<p>Response:
</p>
<pre>
{
     &quot;trades&quot;: [
     { 
          &quot;timestamp&quot;:   13386268, 
          &quot;price&quot;:    &quot;100000000&quot;, 
          &quot;asset&quot;:       &quot;13388701969217905199&quot;, 
          &quot;quantityQNT&quot;: &quot;12&quot;, 
          &quot;block&quot;:       &quot;15363991879367428772&quot;, 
          &quot;askOrder&quot;:    &quot;9028610672087970547&quot;, 
          &quot;bidOrder&quot;:    &quot;7785235474459518056&quot; 
     },
     {
          ...
     }
     ] 
}
</pre>
<p><small><i>Verified 5/9/14</i></small>
</p>
<h3><span class="mw-headline" id="Transfer_asset"><b>Transfer asset</b></span></h3>
<p>Used to transfer a quantity of asset from one account to another
</p>
<h4><span class="mw-headline" id="Request_29"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=transferAsset&amp;
     secretPhrase=SECRET&amp;
     recipient=RECIPIENT&amp; 
     asset=ASSETID&amp;
     comment=COMMENT&amp;
     quantityQNT=QTY&amp;
     fee=FEE&amp;
     deadline=DEADLINE&amp; 
     referencedTransaction=REFTXID&amp;
     broadcast=BROAD
</pre>
<p>Where:
</p>
<ul>
<li> SECRET is the secret passphrase of the account transferring the asset
</li>
<li> RECIPIENT is the recipient account number
</li>
<li> ASSETID is the ID for the asset being transferred
</li>
<li> COMMENT is a comment for the transfer (optional)
</li>
<li> QTY is the amount of the asset being transferred
</li>
<li> FEE is the fee for the transaction in MilliLm
</li>
<li> DEADLINE is the deadline for the transaction to get a confirmation, expressed in minutes
</li>
<li> REFTXID is a previous transaction ID that you want to reference. This creates a chained transaction, meaning that the current transaction cannot be confirmed unless the referenced transaction is also confirmed. (optional)
</li>
<li> BROAD is if you want the transaction broadcasted or not (optional)
</li>
</ul>
<h4><span class="mw-headline" id="Response_29"><b>Response</b></span></h4>
 <pre>
{
     &quot;fullHash&quot;:                 &quot;FULLHASH&quot;, 
     &quot;signatureHash&quot;:            &quot;SIGHASH&quot;, 
     &quot;transactionBytes&quot;:         &quot;TXBYTES&quot;, 
     &quot;hash&quot;:                     &quot;HASH&quot;, 
     &quot;transaction&quot;:              &quot;TX&quot;, 
     &quot;broadcasted&quot;:              BROAD, 
     &quot;unsignedTransactionBytes&quot;: &quot;UNTXBYTES&quot; 
}
</pre>
<p>Where
</p>
<ul>
<li>FULLHASH is the full hash of the transaction
</li>
<li>SIGHASH is a sha256 hash of the transaction signature. Useful for escrow transactions
</li>
<li>TXBYTES is the bytecode of a transaction
</li>
<li>HASH is hash of all transaction fields excluding the signature
</li>
<li>TX is the ID of the transaction
</li>
<li>BROAD is if the transaction was broadcasted or not
</li>
<li>UNTXBYTES is the transaction bytes with the signature part being replaced with zeros
</li>
</ul>
<h4><span class="mw-headline" id="Example_29"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=transferAsset&amp;
     secretPhrase=123&amp;
     recipient=81623458239475&amp;
     asset=46556984592384756298&amp;
     quantityQNT=45&amp;
     fee=100000000&amp;
     deadline=1440
</pre>
<p>Response:
</p>
<pre>
{ 
     &quot;fullHash&quot;:                 &quot;9bd14e7a93d228a85e82a98071f1bd96c158dda856311722e6feafb1a36e71e2&quot;, 
     &quot;signatureHash&quot;:            &quot;540a2963aac95e63c5e4d13b452be02160e5ecd9cb1c3e8306eed4b47975b9ba&quot;, 
     &quot;transactionBytes&quot;:         &quot;0201f120db00a005668683e673274c671802492d6f54cdc33d247a...&quot;, 
     &quot;hash&quot;:                     &quot;8633ca65458bb9895ef53c3875ff59dd4b85ddf922dcaae3f276796932d33731&quot;, 
     &quot;transaction&quot;:              &quot;12117166328294330779&quot;, 
     &quot;broadcasted&quot;:              true, 
     &quot;unsignedTransactionBytes&quot;: &quot;0201f120db00a005668683e673274c671802492d6f54cdc33d2...&quot; 
}
</pre>
<p><small><i>Verified 5/9/14</i></small>
</p>
<h3><span class="mw-headline" id="Place_order"><b>Place order</b></span></h3>
<p>Places an "ask" or "bid" order for an asset onto the exchange.
</p>
<h4><span class="mw-headline" id="Request_30"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=BID_OR_ASK&amp;
     secretPhrase=SECRET&amp;
     asset=ASSETID&amp;
     quantityQNT=QTY&amp;
     price=PRICE&amp;
     fee=FEE&amp;
     deadline=DEADLINE&amp;
     referencedTransaction=REFTXID&amp;
     broadcast=BROAD
</pre>
<p>Where:
</p>
<ul>
<li> BID_OR_ASK is either "placeAskOrder" or "placeBidOrder"
</li>
<li> SECRET is the secret passphrase of the account issuing the transaction
</li>
<li> ASSETID is the assetID of the asset being ordered
</li>
<li> QTY is the amount of the asset being ordered
</li>
<li> PRICE is the bid/ask price, expressed in MilliLm
</li>
<li> FEE is the fee for the transaction in MilliLm
</li>
<li> DEADLINE is the deadline for the transaction to get a confirmation, expressed in minutes
</li>
<li> REFTXID is a previous transaction ID that you want to reference.  This creates a chained transaction, meaning that the current transaction cannot be confirmed unless the referenced transaction is also confirmed.  (optional)
</li>
<li> BROAD is if you want the transaction broadcasted or not (optional)
</li>
</ul>
<h4><span class="mw-headline" id="Response_30"><b>Response</b></span></h4>
<pre>
{
     &quot;fullHash&quot;:                 &quot;FULLHASH&quot;, 
     &quot;signatureHash&quot;:            &quot;SIGHASH&quot;, 
     &quot;transactionBytes&quot;:         &quot;TXBYTES&quot;, 
     &quot;hash&quot;:                     &quot;HASH&quot;, 
     &quot;transaction&quot;:              &quot;TX&quot;, 
     &quot;broadcasted&quot;:              BROAD, 
     &quot;unsignedTransactionBytes&quot;: &quot;UNTXBYTES&quot; 
}
</pre>
<p>Where
</p>
<ul>
<li>FULLHASH is the full hash of the transaction
</li>
<li>SIGHASH is a sha256 hash of the transaction signature. Useful for escrow transactions
</li>
<li>TXBYTES is the bytecode of a transaction
</li>
<li>HASH is hash of all transaction fields excluding the signature
</li>
<li>TX is the ID of the transaction
</li>
<li>BROAD is if the transaction was broadcasted or not
</li>
<li>UNTXBYTES is the transaction bytes with the signature part being replaced with zeros
</li>
</ul>
<h4><span class="mw-headline" id="Example_30"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=placeBidOrder&amp;
     secretPhrase=123&amp;
     asset=46556984592384756298&amp;
     quantityQNT=70&amp;
     price=145&amp;
     fee=100000000&amp;
     deadline=1440&amp;
     referencedTransaction=65374835678
</pre>
<p>Response:
</p>
<pre>
{
     &quot;fullHash&quot;:                 &quot;a797ff58c5ed5c6f53c708dbe137812495c6af0eb280a3d001bb1917eb6a5561&quot;, 
     &quot;signatureHash&quot;:            &quot;751c9df738e1894ef550bf9e0725188168d4febf48a4da51b1efafaaa840dbcb&quot;, 
     &quot;transactionBytes&quot;:         &quot;02035d0fdb00a005668683e673274c671802492d6f54cdc33d247aa426e7cef83776...&quot;, 
     &quot;hash&quot;:                     &quot;4785247b3238fda4fe53d47bc8a97a2b3acf974a02854792b59b092f3473eecd&quot;, 
     &quot;transaction&quot;:              &quot;8024550067924866983&quot;, 
     &quot;broadcasted&quot;:              true, 
     &quot;unsignedTransactionBytes&quot;: &quot;02035d0fdb00a005668683e673274c671802492d6f54cdc33d247aa426e7cef...&quot; 
}
</pre>
<p><small><i>Verified 5/9/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_order_IDs"><b>Get order IDs</b></span></h3>
<p>Obtain order IDs for a specified asset's bid/ask orders
</p>
<h4><span class="mw-headline" id="Request_31"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=GET_BID_OR_ASK&amp;
     asset=ASSETID
</pre>
<p>Where:
</p>
<ul>
<li>GET_BID_OR_ASK is either "getAskOrderIds" or "getBidOrderIds"
</li>
<li>ASSETID is the ID of the asset whose orders you want to see
</li>
</ul>
<h4><span class="mw-headline" id="Response_31"><b>Response</b></span></h4>
<p>Returns an array of all ask/bid orders:
</p>
<pre>
{
     &quot;GET_BID_OR_ASK&quot;: [ARRAY_OF_ORDER_IDs]
}
</pre>
<p>Where:
</p>
<ul>
<li>GET_BID_OR_ASK is either "getAskOrderIds" or "getBidOrderIds"
</li>
</ul>
<h4><span class="mw-headline" id="Example_31"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getAskOrderIds&amp;
     asset=14269709746849295412</pre>
<p>Response:
</p>
<pre>
{
     &quot;askOrderIds&quot;:
          [
               &quot;3467356724512&quot;, 
               &quot;824756987236452&quot;
          ]
}
</pre>
<p><small><i>Verified 5/8/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_orders"><b>Get orders</b></span></h3>
<p>Obtain orders for a specified asset's bid/ask orders
</p>
<h4><span class="mw-headline" id="Request_32"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=GET_BID_OR_ASK&amp;
     asset=ASSETID&amp;
     limit=LIMIT
</pre>
<p>Where:
</p>
<ul>
<li>GET_BID_OR_ASK is either "getBidOrders" or "getAskOrders"
</li>
<li>ASSETID is the ID of the asset whose orders you want to see
</li>
<li>LIMIT defines how many orders to get, if not provided it will show all of them
</li>
</ul>
<h4><span class="mw-headline" id="Response_32"><b>Response</b></span></h4>
<p>Returns an array of all ask/bid orders:
</p>
<pre>
{
     &quot;GET_BID_OR_ASK&quot;: [ARRAY_OF_ORDERs]
}
</pre>
<h4><span class="mw-headline" id="Example_32"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getAskOrders
     asset=15680163033397272955
</pre>
<p>Response:
</p>
<pre>
{
    &quot;askOrders&quot;: [
        {
            &quot;height&quot;: 90703,
            &quot;price&quot;: &quot;78932342&quot;,
            &quot;asset&quot;: &quot;15680163033397272955&quot;,
            &quot;order&quot;: &quot;4529944714996630823&quot;,
            &quot;quantityQNT&quot;: &quot;20&quot;,
            &quot;accountRS&quot;: &quot;LMA-JNYK-TP3W-VDBB-9FRVB&quot;,
            &quot;account&quot;: &quot;8425933418718057425&quot;,
            &quot;type&quot;: &quot;ask&quot;
        },
        {
            &quot;height&quot;: 77415,
            &quot;price&quot;: &quot;99000000&quot;,
            &quot;asset&quot;: &quot;15680163033397272955&quot;,
            &quot;order&quot;: &quot;3158651792442050495&quot;,
            &quot;quantityQNT&quot;: &quot;39&quot;,
            &quot;accountRS&quot;: &quot;LMA-AMPQ-B6ZZ-S8TL-EFDBH&quot;,
            &quot;account&quot;: &quot;14386024746077933238&quot;,
            &quot;type&quot;: &quot;ask&quot;
        },
        {
            &quot;height&quot;: 78822,
            &quot;price&quot;: &quot;150000000&quot;,
            &quot;asset&quot;: &quot;15680163033397272955&quot;,
            &quot;order&quot;: &quot;954178876942447633&quot;,
            &quot;quantityQNT&quot;: &quot;1&quot;,
            &quot;accountRS&quot;: &quot;LMA-FVXE-SLB6-KL5V-A2Q75&quot;,
            &quot;account&quot;: &quot;9337862827899547564&quot;,
            &quot;type&quot;: &quot;ask&quot;
        }
    ]
}
</pre>
<p><small><i>Verified 5/12/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_current_account_order_IDs"><b>Get current account order IDs</b></span></h3>
<p>Obtain current order IDs for bid or ask orders for a specific account, optionally filtered by an an assetID.  Implemented in version 0.5.9.
</p>
<h4><span class="mw-headline" id="Request_33"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=GET_BID_OR_ASK&amp;
     account=ACCOUNT&amp;
     asset=ASSETID
</pre>
<p>Where:
</p>
<ul>
<li>GET_BID_OR_ASK is either "getAccountCurrentAskOrderIds" or "getAccountCurrentBidOrderIds"
</li>
<li>ACCOUNT is the account number whose orders you want to display.
</li>
<li>ASSETID is the ID of a specific asset whose orders you want to display.
</li>
</ul>
<h4><span class="mw-headline" id="Response_33"><b>Response</b></span></h4>
<p>Returns an array of all ask/bid order IDs:
</p>
<pre>
{
     &quot;GET_BID_OR_ASK_IDs&quot;: 
          [ARRAY_OF_ORDER_IDs]
}
</pre>
<p>Where:
</p>
<ul>
<li>GET_BID_OR_ASK_IDs is either "askOrderIds" or "bidOrderIds"
</li>
</ul>
<h4><span class="mw-headline" id="Example_33"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getAccountCurrentAskOrderIds&amp;
     account=1189524830352486657&amp;
     asset=2438729719254516952
</pre>
<p>Response:
</p>
<pre>
{
     &quot;askOrderIds&quot;:
          [
               &quot;3467356725412&quot;, 
               &quot;824756987456452
          ]
}
</pre>
<p><small><i>Verified 5/18/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_order"><b>Get order</b></span></h3>
<p>Obtain a specific bid or ask order
</p>
<h4><span class="mw-headline" id="Request_34"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=GET_BID_OR_ASK&amp;
     order=ORDERID</pre>
<p>Where:
</p>
<ul>
<li>GET_BID_OR_ASK is either "getAskOrder" or "getBidOrder"
</li>
<li>ORDERID is the Order ID you are looking up
</li>
</ul>
<h4><span class="mw-headline" id="Response_34"><b>Response</b></span></h4>
<pre>
{
     &quot;account&quot;:       &quot;ACCOUNT&quot;,
     &quot;accountRS&quot;:     &quot;ACCOUNTRS&quot;,
     &quot;height&quot;:        HEIGHT,
     &quot;asset&quot;:         &quot;ASSETID&quot;, 
     &quot;quantityQNT&quot;:   QTY, 
     &quot;price&quot;:      PRICE,
     &quot;order&quot;:         &quot;ORDER&quot;,
     &quot;type&quot;:          &quot;TYPE&quot;
}
</pre>
<p>Where:
</p>
<ul>
<li> ACCOUNT is the account number associated with the order
</li>
<li> ACCOUNTRS is the Reed-Solomon address of the account. 
</li>
<li> ASSETID is the ID of the asset being ordered
</li>
<li> QTY is the order quantity
</li>
<li> PRICE is the price, expressed in MilliLm
</li>
<li> HEIGHT is the block height
</li>
<li> ORDER is the ID of the order
</li>
<li> TYPE is the type of order (ask, bid)
</li>
</ul>
<h4><span class="mw-headline" id="Example_34"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getBidOrder&amp;
     order=17936094171153028796
</pre>
<p>Response:
</p>
<pre>
{
     &quot;height&quot;:        90703, 
     &quot;price&quot;:      &quot;78932342&quot;, 
     &quot;asset&quot;:         &quot;15680163033397272955&quot;, 
     &quot;order&quot;:         &quot;17936094171153028796&quot;, 
     &quot;quantityQNT&quot;:   &quot;20&quot;, 
     &quot;account&quot;:       &quot;8425933418718057425&quot;,
     &quot;accountRS&quot;:     &quot;LMA-7HL4-WMNR-XGFL-ASVHV&quot;, 
     &quot;type&quot;:          &quot;ask&quot;
}
</pre>
<p><small><i>Verified 5/13/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_all_open_orders"><b>Get all open orders</b></span></h3>
<p>Obtain information on all open orders
</p>
<h4><span class="mw-headline" id="Request_35"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getAllOpenOrders
</pre>
<h4><span class="mw-headline" id="Response_35"><b>Response</b></span></h4>
<pre>
{
     &quot;height&quot;:        HEIGHT,
     &quot;account&quot;:       &quot;ACCOUNT&quot;,
     &quot;accountRS&quot;:     &quot;ACCOUNTRS&quot;,
     &quot;asset&quot;:         &quot;ASSETID&quot;,
     &quot;order&quot;:         &quot;ORDER&quot;,
     &quot;quantityQNT&quot;:   QTY, 
     &quot;price&quot;:      PRICE,
     &quot;type&quot;:          TYPE
}
</pre>
<p>Where:
</p>
<ul>
<li> ACCOUNT is the account number associated with the order
</li>
<li> ACCOUNTRS is the Reed-Solomon address of the account
</li>
<li> ASSETID is the ID of the asset
</li>
<li> QTY is the order quantity
</li>
<li> PRICE is the price, expressed in MilliLm
</li>
<li> TYPE is the type of order (i.e. ask, bid)
</li>
<li> HEIGHT is the block height
</li>
</ul>
<h4><span class="mw-headline" id="Example_35"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getAllOpenOrders
</pre>
<p>Response:
</p>
<pre>
{ 
     &quot;openOrders&quot;: 
     [ { 
          &quot;height&quot;:      90703, 
          &quot;price&quot;:    &quot;78932342&quot;, 
          &quot;asset&quot;:       &quot;15680163033397272955&quot;, 
          &quot;order&quot;:       &quot;17936094171153028796&quot;, 
          &quot;quantityQNT&quot;: &quot;20&quot;, 
          &quot;account&quot;:     &quot;8425933418718057425&quot;, 
          &quot;accountRS&quot;:   &quot;LMA-2UKS-7VYN-Q73Y-EKE8Y&quot;,
          &quot;type&quot;:        &quot;ask&quot; 
     }, 
     {
          ...
     }
     ]
}
</pre>
<p><small><i>Verified 5/13/14</i></small>
</p>
<h3><span class="mw-headline" id="Cancel_order"><b>Cancel order</b></span></h3>
<p>Issue a cancel for an existing order
</p>
<h4><span class="mw-headline" id="Request_36"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=BID_OR_ASK&amp;
     secretPhrase=SECRET&amp;
     order=ORDERID&amp;
     fee=FEE&amp;
     deadline=DEADLINE&amp;
     referencedTransaction=REFTXID&amp;
     broadcast=BROAD
</pre>
<p>Where:
</p>
<ul>
<li> BID_OR_ASK is either "cancelAskOrder" or "cancelBidOrder"
</li>
<li> SECRET is the secret passphrase of the account issuing the transaction
</li>
<li> ORDERID is the order ID number of the order being canceled
</li>
<li> FEE is the fee for the transaction in MilliLm
</li>
<li> DEADLINE is the deadline for the transaction to get a confirmation, expressed in minutes
</li>
<li> REFTXID is a previous transaction ID that you want to reference.  This creates a chained transaction, meaning that the current transaction cannot be confirmed unless the referenced transaction is also confirmed. (optional)
</li>
<li>BROAD is if you want the transaction broadcasted or not (optional) 
</li>
</ul>
<h4><span class="mw-headline" id="Response_36"><b>Response</b></span></h4>
<pre>
{
     &quot;fullHash&quot;:                 &quot;FULLHASH&quot;, 
     &quot;signatureHash&quot;:            &quot;SIGHASH&quot;, 
     &quot;transactionBytes&quot;:         &quot;TXBYTES&quot;, 
     &quot;hash&quot;:                     &quot;HASH&quot;, 
     &quot;transaction&quot;:              &quot;TX&quot;, 
     &quot;broadcasted&quot;:              BROAD, 
     &quot;unsignedTransactionBytes&quot;: &quot;UNTXBYTES&quot; 
}
</pre>
<p>Where
</p>
<ul>
<li>FULLHASH is the full hash of the transaction
</li>
<li>SIGHASH is a sha256 hash of the transaction signature. Useful for escrow transactions
</li>
<li>TXBYTES is the bytecode of a transaction
</li>
<li>HASH is hash of all transaction fields excluding the signature
</li>
<li>TX is the ID of the transaction
</li>
<li>BROAD is if the transaction was broadcasted or not
</li>
<li>UNTXBYTES is the transaction bytes with the signature part being replaced with zeros
</li>
</ul>
<h4><span class="mw-headline" id="Example_36"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=cancelAskOrder&amp;
     secretPhrase=123&amp;
     order=3467356724512&amp; 
     fee=100000000&amp;
     deadline=1440
</pre>
<p>Response:
</p>
<pre>
{
     &quot;fullHash&quot;:                 &quot;e9c821547e851998f05ef39a39dc196b27f5e3069c1bf516fffaf53359304cc4&quot;, 
     &quot;signatureHash&quot;:            &quot;a5bf7481f5ad02be69f5fff7cd73c3dd7e443a4335721511e9e79198bc6f0324&quot;, 
     &quot;transactionBytes&quot;:         &quot;02051316db00a005668683e673274c671802492d6f54cdc33d247aa...&quot;, 
     &quot;hash&quot;:                     &quot;10ffcff771db618ca243b561943e09fd4098ade100efb2dc68f7861705f6262d&quot;, 
     &quot;transaction&quot;:              &quot;10959937945806686441&quot;, 
     &quot;broadcasted&quot;:              true, 
     &quot;unsignedTransactionBytes&quot;: &quot;02051316db00a005668683e673274c671802492d6f54cdc33d247aa426e7c...&quot; 
}
</pre>
<p><small><i>Verified 5/9/14</i></small>
</p>
<h2><span class="mw-headline" id="Poll_operations"><b>Poll operations</b></span></h2>
<h3><span class="mw-headline" id="Create_Poll"><b>Create Poll</b></span></h3>
<p>Create a new poll
</p>
<h4><span class="mw-headline" id="Request_37"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=createPoll&amp; 
     name=NAME&amp;
     description=DESCRIP&amp;
     minNumberOfOptions=MINOPTIONS&amp;
     maxNumberOfOptions=MAXOPTIONS&amp;
     optionsAreBinary=BINARY&amp;
     option1=OPTION1&amp;
     option2=OPTION2&amp;
     option3=OPTION3&amp;
     secretPhrase=SECRET&amp;
     fee=FEE&amp;
     deadline=DEADLINE&amp;
     referencedTransactionFullHash=REFTXHASH&amp;
     broadcast=BROAD
</pre>
<p>Where:
</p>
<ul>
<li>DESCRIP is the description of the poll
</li>
<li>NAME is the name of the poll
</li>
<li>MINOPTIONS is the minimal number of options for the poll
</li>
<li>MAXOPTIONS is the maximum number of options for the poll
</li>
<li>OPTION1 is the name of the first option (OPTIONS 2 &amp; 3 are optional)
</li>
<li>SECRET the secret passphrase (private key) for the account 
</li>
<li>DEADLINE is the deadline for transaction, expressed in minutes
</li>
<li>FEE is the fee for the transaction (in MilliLm)
</li>
<li>BINARY is if the options are binary (optional)
</li>
<li>REFTXHASH is the ID of a transaction referenced by this one (optional)
</li>
<li>BROAD true or false if it should be broadcasted (optional) 
</li>
</ul>
<h4><span class="mw-headline" id="Response_37"><b>Response</b></span></h4>
<pre>
{
     &quot;fullHash&quot;:                 &quot;FULLHASH&quot;, 
     &quot;signatureHash&quot;:            &quot;SIGHASH&quot;, 
     &quot;transactionBytes&quot;:         &quot;TXBYTES&quot;, 
     &quot;hash&quot;:                     &quot;HASH&quot;, 
     &quot;transaction&quot;:              &quot;TX&quot;, 
     &quot;broadcasted&quot;:              BROAD, 
     &quot;unsignedTransactionBytes&quot;: &quot;UNTXBYTES&quot; 
}
</pre>
<p>Where:
</p>
<ul>
<li>FULLHASH is the full hash of the transaction
</li>
<li>SIGHASH is a sha256 hash of the transaction signature. Useful for escrow transactions
</li>
<li>TXBYTES is the bytecode of a transaction
</li>
<li>HASH is hash of all transaction fields excluding the signature
</li>
<li>TX is the ID of the transaction
</li>
<li>BROAD is if the transaction was broadcasted or not
</li>
<li>UNTXBYTES is the transaction bytes with the signature part being replaced with zeros
</li>
</ul>
<h4><span class="mw-headline" id="Example_37"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=createPoll&amp; 
     name=Testing123&amp;
     description=Testing&amp;
     minNumberOfOptions=1&amp;
     maxNumberOfOptions=1&amp;
     option1=yes&amp;
     option2=no&amp;
     secretPhrase=MySuperSecretPasswordThatIsNotActuallyPostedHereOrIsEvenRealSoDoNotEvenTryIt&amp;
     fee=100000000&amp;
     deadline=1440
</pre>
<p>Response:
</p>
<pre>
{ 
     &quot;fullHash&quot;:                 &quot;7ef9e19d0c7943002fd98a7ae08f1b4a1d473c67796f89225b167fd4913ce73f&quot;, 
     &quot;signatureHash&quot;:            &quot;a76722be0652d5c88cb7292d1cb04ea299eaea74c35ad726e868d08799946c38&quot;, 
     &quot;transactionBytes&quot;:         &quot;010234fbda00a005668683e673274c671802492d6f54cdc33d247aa426e...&quot;, 
     &quot;hash&quot;:                     &quot;940383ff1bf177d4e4fee05c78865b12ace2570152c64570219dfc0aa10c246b&quot;, 
     &quot;transaction&quot;:              &quot;18991918535014782&quot;, 
     &quot;broadcasted&quot;:              true, 
     &quot;unsignedTransactionBytes&quot;: &quot;010234fbda00a005668683e673274c671802492d6f54cdc33d247...&quot; 
}
</pre>
<p><small><i>Verified 5/9/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_Poll"><b>Get Poll</b></span></h3>
<p>Gets information about requested poll
</p>
<h4><span class="mw-headline" id="Request_38"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getPoll&amp; 
     poll=POLL
</pre>
<p>Where:
</p>
<ul>
<li> POLL is the id of the poll that is requested
</li>
</ul>
<h4><span class="mw-headline" id="Response_38"><b>Response</b></span></h4>
<pre>
{ 
     &quot;description&quot;:        &quot;DESCRIP&quot;, 
     &quot;name&quot;:               &quot;NAME&quot;, 
     &quot;maxNumberOfOptions&quot;: MAXOPTIONS, 
     &quot;optionsAreBinary&quot;:   BINARY, 
     &quot;voters&quot;:             [VOTERS], 
     &quot;minNumberOfOptions&quot;: MINOPTIONS, 
     &quot;options&quot;:            [OPTIONS] 
}
</pre>
<p>Where:
</p>
<ul>
<li>DESCRIP is the description of the poll
</li>
<li>NAME is the name of the poll
</li>
<li>MAXOPTIONS is the maximum number of options for the poll
</li>
<li>BINARY is if the options are binary
</li>
<li>VOTERS is the number of voters of the poll
</li>
<li>MINOPTIONS is the minimal number of options for the poll
</li>
<li>OPTIONS is the list of options
</li>
</ul>
<h4><span class="mw-headline" id="Example_38"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getPoll&amp; 
     poll=15826354927269615782
</pre>
<p>Response:
</p>
<pre>
{ 
     &quot;description&quot;:        &quot;Does this work?&quot;, 
     &quot;name&quot;:               &quot;Test&quot;, 
     &quot;maxNumberOfOptions&quot;: 1, 
     &quot;optionsAreBinary&quot;:   false, 
     &quot;voters&quot;:             [], 
     &quot;minNumberOfOptions&quot;: 1, 
     &quot;options&quot;:            [ &quot;Yes&quot;, &quot;No&quot;, &quot;I don't know&quot; ] 
}
</pre>
<p><small><i>Verified 5/8/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_Poll_IDs"><b>Get Poll IDs</b></span></h3>
<p>Returns the IDs of all the polls
</p>
<h4><span class="mw-headline" id="Request_39"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getPollIds
</pre>
<h4><span class="mw-headline" id="Response_39"><b>Response</b></span></h4>
<pre>
{ 
     &quot;pollIds&quot;: 
     [ 
          &quot;POLLID&quot;, 
          ...
     ]
}
</pre>
<p>Where:
</p>
<ul>
<li>POLLID is the ID of each poll
</li>
</ul>
<h4><span class="mw-headline" id="Example_39"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getPollIds
</pre>
<p>Response:
</p>
<pre>
{ 
     &quot;pollIds&quot;: 
     [ 
          &quot;15826354927269615782&quot;, 
          &quot;8883605113950920958&quot; 
     ]
}
</pre>
<p><small><i>Verified 5/8/14</i></small>
</p>
<h3><span class="mw-headline" id="Cast_Vote"><b>Cast Vote</b></span></h3>
<p>Cast your vote on a poll
</p>
<h4><span class="mw-headline" id="Request_40"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=castVote&amp; 
     poll=NAME&amp;
     vote1=VOTE1&amp;
     vote2=VOTE2&amp;
     vote3=VOTE3&amp;
     secretPhrase=SECRET&amp;
     fee=FEE&amp;
     deadline=DEADLINE&amp;
     referencedTransactionFullHash=REFTXHASH&amp;
     broadcast=BROAD
</pre>
<p>Where:
</p>
<ul>
<li>NAME is the name of the poll you are voting on
</li>
<li>VOTE1 is your vote (VOTE 2 &amp; 3 are optional if the poll allows multiple options)
</li>
<li>SECRET the secret passphrase (private key) for the account 
</li>
<li>DEADLINE is the deadline for transaction, expressed in minutes
</li>
<li>FEE is the fee for the transaction (in MilliLm)
</li>
<li>REFTXHASH is the ID of a transaction referenced by this one (optional)
</li>
<li>BROAD true or false if it should be broadcasted (optional) 
</li>
</ul>
<h4><span class="mw-headline" id="Response_40"><b>Response</b></span></h4>
<pre>
{
     &quot;fullHash&quot;:                 &quot;FULLHASH&quot;, 
     &quot;signatureHash&quot;:            &quot;SIGHASH&quot;, 
     &quot;transactionBytes&quot;:         &quot;TXBYTES&quot;, 
     &quot;hash&quot;:                     &quot;HASH&quot;, 
     &quot;transaction&quot;:              &quot;TX&quot;, 
     &quot;broadcasted&quot;:              BROAD, 
     &quot;unsignedTransactionBytes&quot;: &quot;UNTXBYTES&quot; 
}
</pre>
<p>Where:
</p>
<ul>
<li>FULLHASH is the full hash of the transaction
</li>
<li>SIGHASH is a sha256 hash of the transaction signature. Useful for escrow transactions
</li>
<li>TXBYTES is the bytecode of a transaction
</li>
<li>HASH is hash of all transaction fields excluding the signature
</li>
<li>TX is the ID of the transaction
</li>
<li>BROAD is if the transaction was broadcasted or not
</li>
<li>UNTXBYTES is the transaction bytes with the signature part being replaced with zeros
</li>
</ul>
<h4><span class="mw-headline" id="Example_40"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=castVote&amp; 
     poll=18991918535014782&amp;
     vote1=yes&amp;
     secretPhrase=MySuperSecretPasswordThatIsNotActuallyPostedHereOrIsEvenRealSoDoNotEvenTryIt&amp;
     fee=100000000&amp;
     deadline=1440
</pre>
<p>Response:
</p>
<pre>
{ 
     &quot;fullHash&quot;:                 &quot;637ea3215258adef61f7fc5a90eff6435d1a7ad8c3790d5855c6943b9aff1daf&quot;, 
     &quot;signatureHash&quot;:            &quot;a6745e26165e9c7870c85bd174348e4e72c825378cfb71760e04f08e30879fa6&quot;, 
     &quot;transactionBytes&quot;:         &quot;010314feda00a005668683e673274c671802492d6f54cdc33...&quot;, 
     &quot;hash&quot;:                     &quot;10ee68836162f6a8e2559a6dbcbc41c4db4b7441e6ff321f01b268d761c6916d&quot;, 
     &quot;transaction&quot;:              &quot;17270557255810645603&quot;, 
     &quot;broadcasted&quot;:              true, 
     &quot;unsignedTransactionBytes&quot;: &quot;010314feda00a005668683e673274c671802492d6f54cdc33d247aa426e7...&quot; 
}
</pre>
<p><small><i>Verified 5/9/14</i></small>
</p>
<h2><span class="mw-headline" id="Server_software_operations"><b>Server software operations</b></span></h2>
<h3><span class="mw-headline" id="Get_Constants"><b>Get Constants</b></span></h3>
<p>Returns all of the constant values used by a server.
</p>
<h4><span class="mw-headline" id="Request_41"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getConstants
</pre>
<h4><span class="mw-headline" id="Response_41"><b>Response</b></span></h4>
<pre>
{
     &quot;maxBlockPayloadLength&quot;:40800,
     &quot;genesisAccountId&quot;:&quot;GENESISACC&quot;,
     &quot;genesisBlockId&quot;:&quot;GENESISBLK&quot;,
     &quot;transactionTypes&quot;:
     [
          {
               &quot;description&quot;:&quot;Payment&quot;,&quot;value&quot;:0,&quot;subtypes&quot;:
               [
                    {&quot;description&quot;:&quot;Ordinary payment&quot;,&quot;value&quot;:0}
               ]
          },
          {
               &quot;description&quot;:&quot;Messaging&quot;,&quot;value&quot;:1,&quot;subtypes&quot;:
               [
                    {&quot;description&quot;:&quot;Arbitrary message&quot;,&quot;value&quot;:0},
                    {&quot;description&quot;:&quot;Alias assignment&quot;,&quot;value&quot;:1},
                    {&quot;description&quot;:&quot;Poll creation&quot;,&quot;value&quot;:2},
                    {&quot;description&quot;:&quot;Vote casting&quot;,&quot;value&quot;:3},
                    {&quot;description&quot;:&quot;Hub terminal announcement&quot;,&quot;value&quot;:4},
                    {&quot;description&quot;:&quot;Account info&quot;,&quot;value&quot;:5}
               ]
          },
          {
               &quot;description&quot;:&quot;Colored coins&quot;,&quot;value&quot;:2,&quot;subtypes&quot;:
               [
                    {&quot;description&quot;:&quot;Asset issuance&quot;,&quot;value&quot;:0},
                    {&quot;description&quot;:&quot;Asset transfer&quot;,&quot;value&quot;:1},
                    {&quot;description&quot;:&quot;Ask order placement&quot;,&quot;value&quot;:2},
                    {&quot;description&quot;:&quot;Bid order placement&quot;,&quot;value&quot;:3},
                    {&quot;description&quot;:&quot;Ask order cancellation&quot;,&quot;value&quot;:4},
                    {&quot;description&quot;:&quot;Bid order cancellation&quot;,&quot;value&quot;:5}
               ]
          },
          {
               &quot;description&quot;:&quot;Digital goods&quot;,&quot;value&quot;:3,&quot;subtypes&quot;:
               [
                    {&quot;description&quot;:&quot;Listing&quot;,&quot;value&quot;:0},
                    {&quot;description&quot;:&quot;Delisting&quot;,&quot;value&quot;:1},
                    {&quot;description&quot;:&quot;Price change&quot;,&quot;value&quot;:2},
                    {&quot;description&quot;:&quot;Quantity change&quot;,&quot;value&quot;:3},
                    {&quot;description&quot;:&quot;Purchase&quot;,&quot;value&quot;:4},
                    {&quot;description&quot;:&quot;Delivery&quot;,&quot;value&quot;:5},
                    {&quot;description&quot;:&quot;Feedback&quot;,&quot;value&quot;:6},
                    {&quot;description&quot;:&quot;Refund&quot;,&quot;value&quot;:7}
               ]
          },
          {
               &quot;description&quot;:&quot;Account Control&quot;,&quot;value&quot;:4,&quot;subtypes&quot;:
               [
                    {&quot;description&quot;:&quot;Effective balance leasing&quot;,&quot;value&quot;:0}
               ]
          }
     ],
     &quot;peerStates&quot;:
          [
               {&quot;description&quot;:&quot;Non-connected&quot;,&quot;value&quot;:0},
               {&quot;description&quot;:&quot;Connected&quot;,&quot;value&quot;:1},
               {&quot;description&quot;:&quot;Disconnected&quot;,&quot;value&quot;:2}
          ]
}
</pre>
<p>Where:
</p>
<ul>
<li>GENESISACC is the genesis account
</li>
<li>GENESISBLK is the genesis block
</li>
</ul>
<h4><span class="mw-headline" id="Example_41"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getConstants
</pre>
<p>Response:
</p>
<pre>
{
     &quot;maxBlockPayloadLength&quot;:40800,
     &quot;genesisAccountId&quot;:&quot;1739068987193023818&quot;,
     &quot;genesisBlockId&quot;:&quot;2680262203532249785&quot;,
     &quot;transactionTypes&quot;:
     [
          {
               &quot;description&quot;:&quot;Payment&quot;,&quot;value&quot;:0,&quot;subtypes&quot;:
               [
                    {&quot;description&quot;:&quot;Ordinary payment&quot;,&quot;value&quot;:0}
               ]
          },
          {
               &quot;description&quot;:&quot;Messaging&quot;,&quot;value&quot;:1,&quot;subtypes&quot;:
               [
                    {&quot;description&quot;:&quot;Arbitrary message&quot;,&quot;value&quot;:0},
                    {&quot;description&quot;:&quot;Alias assignment&quot;,&quot;value&quot;:1},
                    {&quot;description&quot;:&quot;Poll creation&quot;,&quot;value&quot;:2},
                    {&quot;description&quot;:&quot;Vote casting&quot;,&quot;value&quot;:3},
                    {&quot;description&quot;:&quot;Hub terminal announcement&quot;,&quot;value&quot;:4},
                    {&quot;description&quot;:&quot;Account info&quot;,&quot;value&quot;:5}
               ]
          },
          {
               &quot;description&quot;:&quot;Colored coins&quot;,&quot;value&quot;:2,&quot;subtypes&quot;:
               [
                    {&quot;description&quot;:&quot;Asset issuance&quot;,&quot;value&quot;:0},
                    {&quot;description&quot;:&quot;Asset transfer&quot;,&quot;value&quot;:1},
                    {&quot;description&quot;:&quot;Ask order placement&quot;,&quot;value&quot;:2},
                    {&quot;description&quot;:&quot;Bid order placement&quot;,&quot;value&quot;:3},
                    {&quot;description&quot;:&quot;Ask order cancellation&quot;,&quot;value&quot;:4},
                    {&quot;description&quot;:&quot;Bid order cancellation&quot;,&quot;value&quot;:5}
               ]
          },
          {
               &quot;description&quot;:&quot;Digital goods&quot;,&quot;value&quot;:3,&quot;subtypes&quot;:
               [
                    {&quot;description&quot;:&quot;Listing&quot;,&quot;value&quot;:0},
                    {&quot;description&quot;:&quot;Delisting&quot;,&quot;value&quot;:1},
                    {&quot;description&quot;:&quot;Price change&quot;,&quot;value&quot;:2},
                    {&quot;description&quot;:&quot;Quantity change&quot;,&quot;value&quot;:3},
                    {&quot;description&quot;:&quot;Purchase&quot;,&quot;value&quot;:4},
                    {&quot;description&quot;:&quot;Delivery&quot;,&quot;value&quot;:5},
                    {&quot;description&quot;:&quot;Feedback&quot;,&quot;value&quot;:6},
                    {&quot;description&quot;:&quot;Refund&quot;,&quot;value&quot;:7}
               ]
          },
          {
               &quot;description&quot;:&quot;Account Control&quot;,&quot;value&quot;:4,&quot;subtypes&quot;:
               [
                    {&quot;description&quot;:&quot;Effective balance leasing&quot;,&quot;value&quot;:0}
               ]
          }
     ],
     &quot;peerStates&quot;:
     [
          {&quot;description&quot;:&quot;Non-connected&quot;,&quot;value&quot;:0},
          {&quot;description&quot;:&quot;Connected&quot;,&quot;value&quot;:1},
          {&quot;description&quot;:&quot;Disconnected&quot;,&quot;value&quot;:2}
     ],
     &quot;maxArbitraryMessageLength&quot;:1000
}
</pre>
<p><small><i>Verified 5/1/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_My_Info"><b>Get My Info</b></span></h3>
<p>Returns server host and address information.
</p>
<h4><span class="mw-headline" id="Request_42"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getMyInfo
</pre>
<h4><span class="mw-headline" id="Response_42"><b>Response</b></span></h4>
<pre>
{
     &quot;host&quot;:       &quot;HOSTNAME&quot;,
     &quot;address&quot;:       &quot;ADDRESS&quot;
}
</pre>
<p>Where:
</p>
<ul>
<li>HOSTNAME is the server hostname
</li>
<li>ADDRESS is the server address
</li>
</ul>
<h4><span class="mw-headline" id="Example_42"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getMyInfo
</pre>
<p>Response:
</p>
<pre>
{
     &quot;host&quot;:       &quot;127.0.0.1&quot;,
     &quot;address&quot;:    &quot;127.0.0.1&quot;
}
</pre>
<p><small><i>Verified 5/1/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_Peer"><b>Get Peer</b></span></h3>
<p>Retrieves information on a specific peer.
</p>
<h4><span class="mw-headline" id="Request_43"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getPeer&amp;
     peer=PEERNAME
</pre>
<p>Where:
</p>
<ul>
<li>PEERNAME is the name of the peer whose information you want to retrieve.
</li>
</ul>
<h4><span class="mw-headline" id="Response:">Response:</span></h4>
<pre>
{
     &quot;platform&quot;:          &quot;PLATFORM&quot;,
     &quot;blacklisted&quot;:       BLACKLIST,
     &quot;shareAddress&quot;:      SHAREADD
     &quot;application&quot;:       &quot;LIBREMONEY&quot;,
     &quot;weight&quot;:            WEIGHT,
     &quot;hallmark&quot;:          &quot;HALLMARK&quot;,
     &quot;state&quot;:             STATE,
     &quot;announcedAddress&quot;:  &quot;ANNOUNCED&quot;,
     &quot;downloadedVolume&quot;:  DLBYTES,
     &quot;version&quot;:           &quot;VERSION&quot;,
     &quot;uploadedVolume&quot;:    ULBYTES
}
</pre>
<p>Where:
</p>
<ul>
<li>PLATFORM is a string representing the server's platform
</li>
<li>WEIGHT is the node's weight value
</li>
<li>BLACKLIST is if the peer is blacklisted or not
</li>
<li>SHAREADD is if the address is shared
</li>
<li>HALLMARK is the hex string of the node's hallmark, if it is defined
</li>
<li>STATE defines the state of the peer.  1 is active; 0 is known
</li>
<li>ANNOUNCED is the name that the node is announcing to the network (could be a DNS name, IP address, or any other string)
</li>
<li>VERSION is the version of the software running on the node
</li>
<li>DLBYTES and ULBYTES are the number of bytes downloaded and uploaded by the node
</li>
</ul>
<h4><span class="mw-headline" id="Example_43"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getPeer&amp;
     peer=23.88.104.217
</pre>
<p>Response:
</p>
<pre>
{
     &quot;hallmark&quot;:           &quot;ea53f569819ad8c40d62dd7e4c1f4895b2a3...&quot;,
     &quot;downloadedVolume&quot;:  115001,
     &quot;blacklisted&quot;:       false,
     &quot;announcedAddress&quot;:  &quot;node.libremoney.com&quot;,
     &quot;application&quot;:       &quot;LIBREMONEY&quot;,
     &quot;weight&quot;:            911527,
     &quot;uploadedVolume&quot;:    4707,
     &quot;state&quot;:             1,
     &quot;version&quot;:           &quot;0.9.9&quot;,
     &quot;platform&quot;:          &quot;lm.now.im&quot;,
     &quot;shareAddress&quot;:      true
}
</pre>
<p><small><i>Verified 5/1/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_Peers"><b>Get Peers</b></span></h3>
<p>Retrieves a list of all peers known to the server.  Returns ALL peers, regardless of state.
</p>
<h4><span class="mw-headline" id="Request_44"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getPeers
</pre>
<h4><span class="mw-headline" id="Response:_2">Response:</span></h4>
<p>An array of peer names/addresses:
</p>
<pre>
{
     &quot;peers&quot;:
          [
               &quot;PEER&quot;,
               &quot;PEER&quot;,
               &quot;PEER&quot;...
          ]
}
</pre>
<h4><span class="mw-headline" id="Example_44"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getPeers
</pre>
<p>Response:
</p>
<pre>
{
     &quot;peers&quot;:
     [
          &quot;188.226.176.151&quot;,
          &quot;88.202.37.38&quot;,
          &quot;87.211.164.253&quot;...
     ]
}
</pre>
<p><small><i>Verified 5/1/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_State"><b>Get State</b></span></h3>
<p>Returns information on the status of the server being queried.
</p>
<h4><span class="mw-headline" id="Request_45"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getState
</pre>
<h4><span class="mw-headline" id="Response_43"><b>Response</b></span></h4>
<pre>
{
     &quot;numberOfPolls&quot;:             NUMPOLLS,
     &quot;numberOfVotes&quot;:             NUMVOTES,
     &quot;numberOfTrades&quot;:            NUMTRADES,
     &quot;lastBlock&quot;:                 &quot;LASTBLOCKID&quot;,
     &quot;numberOfAliases&quot;:           NUMALIASES,
     &quot;lastBlockchainFeeder&quot;:      &quot;FEEDERPEER&quot;,
     &quot;numberOfBlocks&quot;:            HEIGHT,
     &quot;numberOfPeers&quot;:             NUMPEERS
     &quot;totalMemory&quot;:               CURMEMORY,
     &quot;freeMemory&quot;:                FREEMEMORY,
     &quot;maxMemory&quot;:                 MAXMEMORY,
     &quot;numberOfTransactions&quot;:      NUMTRANS,
     &quot;numberOfUnlockedAccounts&quot;:  NUMUSERS,
     &quot;version&quot;:                   &quot;VERSION&quot;,
     &quot;numberOfOrders&quot;:            NUMORDERS,
     &quot;totalEffectiveBalance&quot;:  EFFECTIVEBALANCE
     &quot;time&quot;:                      TIME,
     &quot;availableProcessors&quot;:       NUMPROCESSORS,
     &quot;numberOfAssets&quot;:            NUMASSETS,
     &quot;cumulativeDifficulty&quot;:      &quot;CUMEDIFF&quot;
     &quot;numberOfAccounts&quot;:          NUMACCOUNTS
}
</pre>
<p>Where:
</p>
<ul>
<li>LASTBLOCKID is the last block address
</li>
<li>NUMALIASES is the number of aliases on the network
</li>
<li>FEEDERPEER is the published hostname of the feeder of the last block
</li>
<li>HEIGHT is the block height
</li>
<li>NUMPEERS is the number of peers on the network
</li>
<li>CURMEMORY is the amount of memory the node is using (in Bytes)
</li>
<li>FREEMEMORY is the amount of free memory on the node (in Bytes)
</li>
<li>MAXMEMORY is the maximum amount of memory the node may use (in Bytes)
</li>
<li>NUMTRANS is the number of transactions in the blockchain
</li>
<li>NUMUSERS is the number of unlocked accounts on this node
</li>
<li>NUMPOLLS is the number of polls on this node
</li>
<li>NUMTRADES is the number of trades on this node
</li>
<li>NUMVOTES is the number of votes on this node
</li>
<li>NUMORDERS is the number of orders on the node
</li>
<li>EFFECTIVEBALANCE is the effective balance active on the network, expressed in MilliLm
</li>
<li>NUMPROCESSORS is the number of processors on the node
</li>
<li>NUMASSETS is the number of assets on the node
</li>
<li>CUMEDIFF is the current cumulative forging difficulty
</li>
<li>NUMACCOUNTS is the number of accounts in the blockchain
</li>
</ul>
<h4><span class="mw-headline" id="Example_45"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getState</pre>
<p>Response:
</p>
<pre>
{
     &quot;numberOfPeers&quot;:868,
     &quot;numberOfPolls&quot;:0,
     &quot;numberOfVotes&quot;:0,
     &quot;availableProcessors&quot;:4,
     &quot;totalEffectiveBalance&quot;:991634266,
     &quot;numberOfAccounts&quot;:33172,
     &quot;numberOfUnlockedAccounts&quot;:0,
     &quot;numberOfBlocks&quot;:126493,
     &quot;numberOfOrders&quot;:0,
     &quot;numberOfTransactions&quot;:182379,
     &quot;version&quot;:&quot;1.0.0&quot;,
     &quot;maxMemory&quot;:477626368,
     &quot;lastBlock&quot;:&quot;4329081735143326181&quot;,
     &quot;totalMemory&quot;:466092032,
     &quot;numberOfAliases&quot;:85657,
     &quot;cumulativeDifficulty&quot;:&quot;3936422822105943&quot;,
     &quot;numberOfTrades&quot;:0,
     &quot;time&quot;:13671770,
     &quot;numberOfAssets&quot;:0,
     &quot;lastBlockchainFeeder&quot;:&quot;cubie-solar.mjke.de&quot;,
     &quot;freeMemory&quot;:135007384
}
</pre>
<p><small><i>Verified 5/1/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_Time"><b>Get Time</b></span></h3>
<p>Retrieves the current time. In LibreMoney, time is measured in seconds since the genesis block.
</p>
<h4><span class="mw-headline" id="Request_46"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getTime
</pre>
<h4><span class="mw-headline" id="Response_44"><b>Response</b></span></h4>
<pre>
{
     &quot;time&quot;:       TIME
}
</pre>
<p>Where:
</p>
<ul>
<li>TIME is number of seconds since the genesis block timestamp.
</li>
</ul>
<h4><span class="mw-headline" id="Example_46"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getTime
</pre>
<p>Response:
</p>
<pre>
{
     &quot;time&quot;:       417
}
</pre>
<p><small><i>Verified 5/1/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_Blockchain_Status"><i>Get Blockchain Status</i></span></h3>
<p>Retrieves the current status of the blockchain
</p>
<h4><span class="mw-headline" id="Request_47"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getBlockchainStatus
</pre>
<h4><span class="mw-headline" id="Response_45"><b>Response</b></span></h4>
<pre>
{
    &quot;lastBlock&quot;: &quot;LASTBLK&quot;,
    &quot;lastBlockchainFeederHeight&quot;: LASTHEIGHT,
    &quot;time&quot;: TIME,
    &quot;lastBlockchainFeeder&quot;: &quot;FEEDERPEER&quot;,
    &quot;numberOfBlocks&quot;: NUMBLKS,
    &quot;isScanning&quot;: SCAN,
    &quot;cumulativeDifficulty&quot;: &quot;CUMDIF&quot;,
    &quot;version&quot;: &quot;VER&quot;
}
</pre>
<p>Where:
</p>
<ul>
<li>LASTBLK is the latest block in the blockchain
</li>
<li>LASTHEIGHT is the latest block's height
</li>
<li>TIME is number of seconds since the genesis block timestamp.
</li>
<li>FEEDERPEER is the published hostname of the feeder of the last block
</li>
<li>NUMBLKS is the total number of blocks
</li>
<li>SCAN is if the blockchain is currently being scanned
</li>
<li>CUMDIF is the current forging difficulty
</li>
<li>VER is the version of the software that is running
</li>
</ul>
<h4><span class="mw-headline" id="Example_47"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getBlockchainStatus
</pre>
<p>Response:
</p>
<pre>
{
    &quot;lastBlock&quot;: &quot;3153685344875873318&quot;,
    &quot;lastBlockchainFeederHeight&quot;: 95337,
    &quot;time&quot;: 14604616,
    &quot;lastBlockchainFeeder&quot;: &quot;192.241.223.132&quot;,
    &quot;numberOfBlocks&quot;: 95339,
    &quot;isScanning&quot;: false,
    &quot;cumulativeDifficulty&quot;: &quot;2406110597084752&quot;,
    &quot;version&quot;: &quot;1.1.0&quot;
}
</pre>
<p><small><i>Verified 5/12/14</i></small>
</p>
<h2><span class="mw-headline" id="Hallmark_operations"><b>Hallmark operations</b></span></h2>
<h3><span class="mw-headline" id="Decode_Hallmark"><b>Decode Hallmark</b></span></h3>
<p>Decodes a node hallmark.
</p>
<h4><span class="mw-headline" id="Request_48"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=decodeHallmark&amp;
     hallmark=HEXSTRING
</pre>
<p>Where:
</p>
<ul>
<li>HEXSTRING is the hallmark value
</li>
</ul>
<h4><span class="mw-headline" id="Response_46"><b>Response</b></span></h4>
<pre>
{
     &quot;valid&quot;:        VALID,
     &quot;weight&quot;:       WEIGHT,
     &quot;host&quot;:         &quot;HOSTIP&quot;,
     &quot;account&quot;:      &quot;ACCOUNT&quot;,
     &quot;accountRS&quot;:    &quot;ACCOUNTRS&quot;,
     &quot;date&quot;:         &quot;DATE&quot;
}
</pre>
<p>Where:
</p>
<ul>
<li>VALID is either true or false
</li>
<li>WEIGHT is the weight assigned to the hallmark
</li>
<li>HOSTIP is the IP address or domain name associated with the hallmark
</li>
<li>ACCOUNT is the account number associated with the hallmark
</li>
<li>ACCOUNTRS is the Reed-Solomon address of the account
</li>
<li>DATE is the date the hallmark was created, in yyyy-mm-dd
</li>
</ul>
<h4><span class="mw-headline" id="Example_48"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://127.0.0.1:1400/api?
     requestType=decodeHallmark&amp;
     hallmark=d67f03a47cd91fc...8b9e30f371a9fcc8f
</pre>
<p>Response:
</p>
<pre>
{
     &quot;valid&quot;:      true,
     &quot;weight&quot;:     1000,
     &quot;host&quot;:       &quot;162.23.47.189&quot;,
     &quot;account&quot;:    &quot;123124126674545462232&quot;,
     &quot;accountRS&quot;:  &quot;LMA-5EGB-HKFP-NQUT-DKYFH&quot;,
     &quot;date&quot;:       &quot;2013-12-09&quot;
}
</pre>
<p><small><i>Verified 5/13/14</i></small>
</p>
<h3><span class="mw-headline" id="Generate_Hallmark"><b>Generate Hallmark</b></span></h3>
<p>Generates a node hallmark.
</p>
<h4><span class="mw-headline" id="Request_49"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=markHost&amp;
     secretPhrase=MY_SECRET&amp;
     host=MY_HOST&amp;
     weight=WEIGHT&amp;
     date=CURRENT_DATE
</pre>
<p>Where:
</p>
<ul>
<li>MY_SECRET is the secret passphrase for the account that will be hallmarked on the node.  Should be URL-encoded.
</li>
<li>MY_HOST is the host name for the node you want to hallmark
</li>
<li>WEIGHT is the weight you'd like to assign to the node.  If more than one node is hallmarked by the same account, this nodes weight will be determined as (this_weight/sum_of_all_weights)
</li>
<li>CURRENT_DATE is today's date, in yyyy-mm-dd format
</li>
</ul>
<h4><span class="mw-headline" id="Response_47"><b>Response</b></span></h4>
<pre>
{
     &quot;hallmark&quot;:       &quot;HEXSTRING&quot;
}
</pre>
<p>Where:
</p>
<ul>
<li>HEXSTRING is the encoded hallmark string (1856 Bytes)
</li>
</ul>
<h4><span class="mw-headline" id="Example_49"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=markHost&amp;
     secretPhrase=MySuperSecretPasswordThatIsNotEasy&amp;
     host=node23.nodesrus.com&amp;
     weight=100&amp;
     date=2014-01-01
</pre>
<p>Response:
</p>
<pre>
{
     &quot;hallmark&quot;:       &quot;d67f03a47cd91fc1...fd49f66b462daa1f14ae8&quot;
}
</pre>
<p><small><i>Verified 5/5/14</i></small>
</p>
<h2><span class="mw-headline" id="Token_operations"><b>Token operations</b></span></h2>
<h3><span class="mw-headline" id="Decode_Token"><b>Decode Token</b></span></h3>
<p>Decodes an authorization token. This is used to authorize an account on a specific web site without requiring the transmission of a secret passphrase.
</p>
<h4><span class="mw-headline" id="Request_50"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=decodeToken&amp;
     website=WEBSITE&amp;
     token=AUTHSTRING
</pre>
<p>Where:
</p>
<ul>
<li>WEBSITE is the URL for the web site where authorization was granted. By convention this does not include the "http://" portion of the URL.
</li>
<li>AUTHSTRING is the encoded authorization string
</li>
</ul>
<h4><span class="mw-headline" id="Response_48"><b>Response</b></span></h4>
<pre>
{
     &quot;account&quot;:       &quot;ACCOUNT&quot;, 
     &quot;timestamp&quot;:     TIME, 
     &quot;valid&quot;:         BOOLEAN
}
</pre>
<p>Where:
</p>
<ul>
<li>ACCOUNT is the LibreMoney account number associated with the token
</li>
<li>TIME is the time in seconds since the Genesis block timestamp, representing the creation time of the token
</li>
<li>BOOLEAN will be "true" or "false", indicating whether or not the token is valid
</li>
</ul>
<h4><span class="mw-headline" id="Example_50"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=decodeToken&amp;
     website=www.domain.com&amp;
     token=StringOf160Chars
</pre>
<p>Response:
</p>
<pre>
{
     &quot;account&quot;:       &quot;398532577100249608&quot;, 
     &quot;timestamp&quot;:     622, 
     &quot;valid&quot;:         true 
}
</pre>
<p><small><i>Verified 5/9/14</i></small>
</p>
<h3><span class="mw-headline" id="Generate_Token"><b>Generate Token</b></span></h3>
<p>Creates an authorization token. Tokens can be used to authorize an account on a specific web site without requiring the transmission of a secret passphrase.
</p>
<h4><span class="mw-headline" id="Request_51"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=generateToken&amp;
     secretPhrase=SECRET&amp;
     website=WEBSITE

</pre>
<p>Where:
</p>
<ul>
<li>SECRET is the passphrase (private key) for the account that will generate the token.
</li>
<li>WEBSITE is the URL for the web site for which authorization should be granted. By convention this does not include the "http://" portion of the URL.
</li>
</ul>
<h4><span class="mw-headline" id="Response_49"><b>Response</b></span></h4>
<pre>
{
     &quot;token&quot;:       StringOf160Chars 
}
</pre>
<h4><span class="mw-headline" id="Example_51"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=generateToken&amp;
     secretPhrase=ItWasABrightColdDayInAprilAndTheClocksWereStrikingThirteen&amp;
     website=www.genesisblock.com
</pre>
<p>Response:
</p>
<pre>
{
     &quot;token&quot;:       &quot;7dstcbs4fnbq614faea405ga3dj...etb0n9f0k6uvlku4d751kftqlb128t4&quot;
}
</pre>
<p><small><i>Verified 5/9/14</i></small>
</p>
<h2><span class="mw-headline" id="Transaction_operations"><b>Transaction operations</b></span></h2>
<h3><span class="mw-headline" id="Broadcast_Transaction"><b>Broadcast Transaction</b></span></h3>
<p>Broadcasts a transaction to the network
</p>
<h4><span class="mw-headline" id="Request_52"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=broadcastTransaction&amp;
     transactionBytes=TX_BYTECODE
</pre>
<p>Where:
</p>
<ul>
<li> TX_BYTECODE is the bytecode of a transaction
</li>
</ul>
<h4><span class="mw-headline" id="Response_50"><b>Response</b></span></h4>
<pre>
{
     &quot;transaction&quot;:       &quot;TRANSACTION_ID&quot;
}
</pre>
<h4><span class="mw-headline" id="Example_52"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=broadcastTransaction&amp;
     transactionBytes= 000022e22800e8036653833f4272604d...</pre>
<p>Response:
</p>
<pre>
{
     &quot;transaction&quot;:       &quot;17484500871708980634&quot;
}
</pre>
<ul>
<li>Note: You will get '"error": "Double spending transaction"' if the transaction has already been broadcasted
</li>
</ul>
<p><small><i>Verified 5/6/14</i></small>
</p>
<h3><span class="mw-headline" id="Calculate_Full_Hash"><b>Calculate Full Hash</b></span></h3>
<p>Calculates the full hash of a transaction
</p>
<h4><span class="mw-headline" id="Request_53"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=calculateFullHash&amp;
     unsignedTransactionBytes=UNTXBYTES&amp;
     signatureHash=SIGHASH
</pre>
<p>Where:
</p>
<ul>
<li>UNTXBYTES is the unsigned bytes contained in a transaction 
</li>
<li>SIGHASH is a sha256 hash of the transaction signature. Useful for escrow transactions
</li>
</ul>
<h4><span class="mw-headline" id="Response_51"><b>Response</b></span></h4>
<pre>
{
     &quot;fullHash&quot;: &quot;FULLHASH&quot; 
}
</pre>
<h4><span class="mw-headline" id="Example_53"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=calculateFullHash&amp;
     unsignedTransactionBytes=01016e23d700a005668683e673274c67...&amp;
     signatureHash=07afbcfb72b4fa91d8e22f8f47950404270edc1d250d2c6edad7a58679fbe1cf
</pre>
<p>Response:
</p>
<pre>
{ 
     &quot;fullHash&quot;: &quot;cc98e57a065610d17c6ba6a6406e4930b9a740bf1737847ab2e96e3733233984&quot; 
}
</pre>
<p><small><i>Verified 5/6/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_Account_Transaction_IDs_2"><b>Get Account Transaction IDs</b></span></h3>
<p>Retrieves a list of transaction IDs associated with a LibreMoney account
</p>
<h4><span class="mw-headline" id="Request_54"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getAccountTransactionIds&amp;
     account=ACCOUNT&amp;
     timestamp=TIME
</pre>
<p>Where:
</p>
<ul>
<li> ACCOUNT is the account number for which transaction IDs are being requested
</li>
<li> TIME is the time (in seconds) since the generation of the genesis block
</li>
</ul>
<h4><span class="mw-headline" id="Response_52"><b>Response</b></span></h4>
<pre>
{
     &quot;transactionIds&quot;:
          [ARRAY_OF_IDs]
}
</pre>
<p>Where:
</p>
<ul>
<li> ARRAY_OF_IDs is an array of transaction IDs associated with the account
</li>
</ul>
<h4><span class="mw-headline" id="Example_54"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getAccountTransactionIds&amp;
     account=6331110009135084386&amp;
     timestamp=0</pre>
<p>Response:
</p>
<pre>
{
     &quot;transactionIds&quot;:
          [
               &quot;17484500871708980634&quot;
          ]
}
</pre>
<h3><span class="mw-headline" id="Get_Unconfirmed_Account_Transaction_IDs"><b>Get Unconfirmed Account Transaction IDs</b></span></h3>
<p>Retrieves a list of unconfirmed transaction IDs associated with a LibreMoney account
</p>
<h4><span class="mw-headline" id="Request_55"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getUnconfirmedTransactionIds&amp;
     account=ACCOUNT
</pre>
<p>Where:
</p>
<ul>
<li> ACCOUNT is the account number for which unconfirmed transaction IDs are being requested
</li>
</ul>
<h4><span class="mw-headline" id="Response_53"><b>Response</b></span></h4>
<pre>
{
     &quot;unconfirmedTransactionIds&quot;:
          [ARRAY_OF_IDs]
}
</pre>
<p>Where:
</p>
<ul>
<li> ARRAY_OF_IDs is an array of unconfirmed transaction IDs associated with the account
</li>
</ul>
<h4><span class="mw-headline" id="Example_55"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getUnconfirmedTransactionIds&amp;
     account=6331110009135084386
</pre>
<p>Response:
</p>
<pre>
{
     &quot;unconfirmedTransactionIds&quot;:
          [
               &quot;17484500871708980634&quot;
          ]
}
</pre>
<p><small><i>Verified 5/5/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_Transaction"><b>Get Transaction</b></span></h3>
<p>Retrieves transaction data.  Can provide <b>either</b> the transaction ID, hash, or full hash of the transaction.
</p>
<h4><span class="mw-headline" id="Request_56"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getTransaction&amp;
     transaction=TRANSID&amp;
     hash=HASH&amp;
     fullHash=FULLHASH
</pre>
<p>Where:
</p>
<ul>
<li>TRANSID is the LibreMoney transaction ID
</li>
<li>HASH is the hash of the transaction
</li>
<li>FULLHASH is the full hash of the transaction
</li>
</ul>
<h4><span class="mw-headline" id="Response_54"><b>Response</b></span></h4>
<pre>
{
     &quot;sender&quot;:          &quot;SENDERACCOUNT&quot;,
     &quot;senderRS&quot;:        &quot;SENDERACCOUNTRS&quot;,
     &quot;fee&quot;:          &quot;FEE&quot;,
     &quot;amount&quot;:       &quot;AMOUNT&quot;,
     &quot;timestamp&quot;:       TIME,
     &quot;referencedTransaction&quot;:       REFTX,
     &quot;confirmations&quot;:   CONFIRMS,
     &quot;subtype&quot;:         SUBTYPE,
     &quot;block&quot;:           &quot;BLOCKID&quot;,
     &quot;senderPublicKey&quot;: &quot;PUBKEY&quot;,
     &quot;type&quot;:            TYPE,
     &quot;deadline&quot;:        DEADLINE,
     &quot;signature&quot;:       &quot;SIGNATURE&quot;,
     &quot;recipient&quot;:       &quot;RECIPACCOUNT&quot;,
     &quot;recipientRS&quot;:     &quot;RECIPACCOUNTRS&quot;,
     &quot;fullHash&quot;:        &quot;FULLHASH&quot;, 
     &quot;signatureHash&quot;:   &quot;SIGHASH&quot;, 
     &quot;hash&quot;:            &quot;HASH&quot;, 
     &quot;transaction&quot;:     &quot;TRANSID&quot;, 
     &quot;attachment&quot;:
     {
          ATTACHMENT
     }
}
</pre>
<p>Where:
</p>
<ul>
<li>SENDERACCOUNT is the account number of the sender
</li>
<li>SENDERACCOUNTRS is the Reed-Solomon address of the sender
</li>
<li>FEE is the fee (in MilliLm) for the transaction
</li>
<li>AMOUNT is the amount of MilliLm in the transaction
</li>
<li>TIME is the time of the transaction, measured in the number of seconds since the genesis block timestamp
</li>
<li>REFTX is the ID of a transaction referenced by this one.  Will be "0" if no previous transaction is referenced.
</li>
<li>CONFIRMS is the number of confirmations for the transaction
</li>
<li>TYPE is the transaction type:
<ul>
<li>0 is an ordinary transaction
</li>
<li>1 is an alias or arbitrary message assignment transaction
</li>
<li>2 is an asset exchange transaction
</li>
</ul>
</li>
<li>SUBTYPE is the transaction subtype:
<ul>
<li>For alias/arbitrary messages:
<ul>
<li>0 is an arbitrary message transaction
</li>
<li>1 is an alias transaction
</li>
</ul>
</li>
<li>For asset exchange transactions:
<ul>
<li>0 is an asset issuance
</li>
<li> 1 is an asset transfer
</li>
<li> 2 is an ask order placement
</li>
<li> 3 is a bid order placement
</li>
<li> 4 is an ask order cancellation
</li>
<li> 5 is a bid order cancellation
</li>
</ul>
</li>
</ul>
</li>
<li> BLOCKID is the ID of the block containing the transaction
</li>
<li> ATTACHMENT is a sub-object representing any additional data needed for the transaction.  Will only be present if applicable.
</li>
<li> PUBKEY is the public key of the sending account for the transaction
</li>
<li> DEADLINE is the deadline for transaction, expressed in minutes
</li>
<li> SIGNATURE is the digital signature of the transaction
</li>
<li> SIGHASH is a sha256 hash of the transaction signature. Useful for escrow transactions 
</li>
<li> RECIPACCOUNT is the account number of the recipient
</li>
<li> RECIPACCOUNTRS is the Reed-Solomon address of the recipient
</li>
</ul>
<p><b>Note:</b> Data from an unconfirmed transaction does not contain "block" or "confirmations" parameters.  Double-spending transactions are not retrieved.
</p>
<h4><span class="mw-headline" id="Example_56"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getTransaction&amp;
     transaction=16244659048134841060
</pre>
<p>Response:
</p>
<pre>
{
     &quot;sender&quot;:       &quot;14336428216306750617&quot;,
     &quot;senderRS&quot;:     &quot;LMA-6DWM-GFYD-A7PS-72P3P&quot;,
     &quot;fee&quot;:       &quot;100000000&quot;,
     &quot;amount&quot;:       &quot;0&quot;,
     &quot;timestamp&quot;:       7376798,
     &quot;referencedTransaction&quot;:       &quot;0&quot;,
     &quot;confirmations&quot;:       6,
     &quot;subtype&quot;:       1,
     &quot;block&quot;:       &quot;16385359704305994802&quot;,
     &quot;blockTimestamp&quot;:       7376860,
     &quot;attachment&quot;:
     {
          &quot;alias&quot;:&quot;LmApi&quot;,
          &quot;uri&quot;:&quot;http:\/\/libremoney.org/&quot;
     },
     &quot;senderPublicKey&quot;:       &quot;64f103fbf0cc41045b1544cda6624eecfb8212b021fba22029a461c4b40c5d79&quot;,
     &quot;type&quot;:       1,
     &quot;deadline&quot;:       1,
     &quot;signature&quot;:       &quot;0cdf64cb06ea21396180a6f201b6a...&quot;,
     &quot;recipient&quot;:       &quot;1739068987193023818&quot;,
     &quot;recipientRS&quot;:     &quot;LMA-BK2J-ZMY4-93UY-8EM9V&quot;,
     &quot;fullHash&quot;: &quot;a3c47c4a2e60c2907efc9c4b9310066cabdf3e2137e67814aa57cb960ad2dfe1&quot;, 
     &quot;signatureHash&quot;: &quot;95cc276d1608dc0c14942a5efc82ccc701a56e873746ef1bfd37995c37ef5991&quot;, 
     &quot;hash&quot;: &quot;15a86f71e1ac267dce35791cefafb71460f458920784ea0d10894844f05894b0&quot;, 
     &quot;transaction&quot;: &quot;10431005438877942947&quot;
}
</pre>
<p><small><i>Verified 5/13/14</i></small>
</p>
<h3><span class="mw-headline" id="Parse_Transaction"><b>Parse Transaction</b></span></h3>
<p>Retrieves transaction data.
</p>
<h4><span class="mw-headline" id="Request_57"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=parseTransaction&amp;
     transactionBytes=TRANSBYTES
</pre>
<p>Where:
</p>
<ul>
<li>TRANSBYTES bytes of the LibreMoney transaction
</li>
</ul>
<h4><span class="mw-headline" id="Response_55"><b>Response</b></span></h4>
<pre>
{
     &quot;sender&quot;:          &quot;SENDERACCOUNT&quot;,
     &quot;senderRS&quot;:        &quot;SENDERACCOUNTRS&quot;,
     &quot;fee&quot;:          &quot;FEE&quot;,
     &quot;amount&quot;:       &quot;AMOUNT&quot;,
     &quot;timestamp&quot;:       TIME,
     &quot;referencedTransaction&quot;:       REFTX,
     &quot;confirmations&quot;:   CONFIRMS,
     &quot;subtype&quot;:         SUBTYPE,
     &quot;block&quot;:           &quot;BLOCKID&quot;,
     &quot;senderPublicKey&quot;: &quot;PUBKEY&quot;,
     &quot;type&quot;:            TYPE,
     &quot;deadline&quot;:        DEADLINE,
     &quot;signature&quot;:       &quot;SIGNATURE&quot;,
     &quot;recipient&quot;:       &quot;RECIPACCOUNT&quot;,
     &quot;recipientRS&quot;:     &quot;RECIPACCOUNTRS&quot;,
     &quot;fullHash&quot;:        &quot;FULLHASH&quot;, 
     &quot;signatureHash&quot;:   &quot;SIGHASH&quot;, 
     &quot;hash&quot;:            &quot;HASH&quot;, 
     &quot;transaction&quot;:     &quot;TRANSID&quot;, 
     &quot;attachment&quot;:
     {
          ATTACHMENT
     }
}
</pre>
<p>Where:
</p>
<ul>
<li>SENDERACCOUNT is the account number of the sender
</li>
<li>SENDERACCOUNTRS is the Reed-Solomon address of the sender
</li>
<li>FEE is the fee (in MilliLm) for the transaction
</li>
<li>AMOUNT is the amount of MilliLm in the transaction
</li>
<li>TIME is the time of the transaction, measured in the number of seconds since the genesis block timestamp
</li>
<li>REFTX is the ID of a transaction referenced by this one.  Will be "0" if no previous transaction is referenced.
</li>
<li>CONFIRMS is the number of confirmations for the transaction
</li>
<li>TYPE is the transaction type:
<ul>
<li>0 is an ordinary transaction
</li>
<li>1 is an alias or arbitrary message assignment transaction
</li>
<li>2 is an asset exchange transaction
</li>
</ul>
</li>
<li>SUBTYPE is the transaction subtype:
<ul>
<li>For alias/arbitrary messages:
<ul>
<li>0 is an arbitrary message transaction
</li>
<li>1 is an alias transaction
</li>
</ul>
</li>
<li>For asset exchange transactions:
<ul>
<li>0 is an asset issuance
</li>
<li> 1 is an asset transfer
</li>
<li> 2 is an ask order placement
</li>
<li> 3 is a bid order placement
</li>
<li> 4 is an ask order cancellation
</li>
<li> 5 is a bid order cancellation
</li>
</ul>
</li>
</ul>
</li>
<li> BLOCKID is the ID of the block containing the transaction
</li>
<li> ATTACHMENT is a sub-object representing any additional data needed for the transaction.  Will only be present if applicable.
</li>
<li> PUBKEY is the public key of the sending account for the transaction
</li>
<li> DEADLINE is the deadline for transaction, expressed in minutes
</li>
<li> SIGNATURE is the digital signature of the transaction
</li>
<li> SIGHASH is a sha256 hash of the transaction signature. Useful for escrow transactions 
</li>
<li> RECIPACCOUNT is the account number of the recipient
</li>
<li> RECIPACCOUNTRS is the Reed-Solomon address of the recipient
</li>
</ul>
<p><b>Note:</b> Data from an unconfirmed transaction does not contain "block" or "confirmations" parameters.  Double-spending transactions are not retrieved.
</p>
<h4><span class="mw-headline" id="Example_57"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=parseTransaction&amp;
     transactionBytes=000022e22800e8036653833f4272604d5d3ef39...
</pre>
<p>Response:
</p>
<pre>
{
     &quot;sender&quot;:       &quot;14336428216306750617&quot;,
     &quot;senderRS&quot;:     &quot;LMA-6DWM-GFYD-A7PS-72P3P&quot;,
     &quot;fee&quot;:       &quot;100000000&quot;,
     &quot;amount&quot;:       &quot;0&quot;,
     &quot;timestamp&quot;:       7376798,
     &quot;referencedTransaction&quot;:       &quot;0&quot;,
     &quot;confirmations&quot;:       6,
     &quot;subtype&quot;:       1,
     &quot;block&quot;:       &quot;16385359704305994802&quot;,
     &quot;blockTimestamp&quot;:       7376860,
     &quot;senderPublicKey&quot;:       &quot;64f103fbf0cc41045b1544cda6624eecfb8212b021fba22029a461c4b40c5d79&quot;,
     &quot;type&quot;:       1,
     &quot;deadline&quot;:       1,
     &quot;signature&quot;:       &quot;0cdf64cb06ea21396180a6f201b6a...&quot;,
     &quot;recipient&quot;:       &quot;1739068987193023818&quot;,
     &quot;recipientRS&quot;:     &quot;LMA-BK2J-ZMY4-93UY-8EM9V&quot;,
     &quot;fullHash&quot;: &quot;a3c47c4a2e60c2907efc9c4b9310066cabdf3e2137e67814aa57cb960ad2dfe1&quot;, 
     &quot;signatureHash&quot;: &quot;95cc276d1608dc0c14942a5efc82ccc701a56e873746ef1bfd37995c37ef5991&quot;, 
     &quot;hash&quot;: &quot;15a86f71e1ac267dce35791cefafb71460f458920784ea0d10894844f05894b0&quot;, 
     &quot;transaction&quot;: &quot;10431005438877942947&quot;
}
</pre>
<p><small><i>Verified 5/13/14</i></small>
</p>
<h3><span class="mw-headline" id="Get_Transaction_Bytes"><b>Get Transaction Bytes</b></span></h3>
<p>Retrieves bytecode of a transaction.
</p>
<h4><span class="mw-headline" id="Request_58"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=getTransactionBytes&amp;
     transaction=TXID</pre>
<p>Where:
</p>
<ul>
<li> TXID is a transaction ID
</li>
</ul>
<h4><span class="mw-headline" id="Response_56"><b>Response</b></span></h4>
<pre>
{
     &quot;confirmations&quot;:            CONFS,
     &quot;transactionBytes&quot;:         &quot;BYTECODE&quot;,
     &quot;unsignedTransactionBytes&quot;: &quot;UNBYTECODE&quot;
}
</pre>
<p>Where:
</p>
<ul>
<li> CONFS is the number of confirmations for the transaction
</li>
<li> BYTECODE is the bytes contained in a transaction
</li>
<li> BYTECODE is the unsigned bytes contained in a transaction
</li>
</ul>
<h4><span class="mw-headline" id="Example_58"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=getTransactionBytes&amp;
     transaction=17484500871708980634
</pre>
<p>Response:
</p>
<pre>{
     &quot;confirmations&quot;:       4462,
     &quot;transactionBytes&quot;:         &quot;000022e22800e8036653833f4272604d5...&quot;,
     &quot;unsignedTransactionBytes&quot;: &quot;000022e22800e8036653833f42...&quot; 
}
</pre>
<p><small><i>Verified 5/5/14</i></small>
</p>
<h3><span class="mw-headline" id="Send_Lm"><b>Send Lm</b></span></h3>
<p>Sends LibreMoney to an account.
</p>
<h4><span class="mw-headline" id="Request_59"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=sendMoney&amp;
     secretPhrase=SECRET&amp;
     recipient=RECIPACCOUNT&amp; 
     amount=AMOUNT&amp; 
     fee=FEE&amp; 
     deadline=DEADLINE&amp; 
     referencedTransaction=REFTRANSACTION&amp;
     publicKey=PUBKEY
</pre>
<p>Where:
</p>
<ul>
<li>SECRET is the secret passphrase for the sending account
</li>
<li>RECIPACCOUNT is the account number of the recipient
</li>
<li>AMOUNT is the amount of MilliLm in the transaction
</li>
<li>FEE is the fee (in MilliLm) for the transaction
</li>
<li>DEADLINE is the deadline for the transaction, in minutes
</li>
<li>REFTRANSACTION is an optional reference to a previous LibreMoney transaction ID
</li>
<li>PUBKEY is the 64-byte public key associated with the account and is optional with the SECRET field
</li>
</ul>
<h4><span class="mw-headline" id="Response_57"><b>Response</b></span></h4>
<pre>
{ 
     &quot;transaction&quot;:        &quot;TRANSACTIONID&quot; 
}
</pre>
<p>Where:
</p>
<ul>
<li>TRANSACTIONID is the ID of the newly-completed transaction
</li>
</ul>
<p><b>Note:</b> "deadline" is specified in minutes. "referencedTransaction" can be omitted.
</p>
<h4><span class="mw-headline" id="Example_59"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=sendMoney&amp;
     secretPhrase=IWontTellYou&amp;
     recipient=398532577100249608&amp;
     amount=1500&amp;
     fee=5&amp;
     deadline=900&amp;
     referencedTransaction=13689168149259791567
</pre>
<p>Response:
</p>
<pre>
{ 
     &quot;transaction&quot;:        &quot;16244659048134841060&quot; 
}
</pre>
<p><small><i>Verified 5/5/14</i></small>
</p><p><br />
</p>
<h3><span class="mw-headline" id="Sign_Transation"><b>Sign Transation</b></span></h3>
<p>Calculates the full hash, signature hash, and transaction from the unsigned transaction
</p>
<h4><span class="mw-headline" id="Request_60"><b>Request</b></span></h4>
<pre>http://localhost:1400/api?
     requestType=signTransaction&amp;
     unsignedTransactionBytes=UNTXBYTES&amp;
     secretPhrase=SECRET
</pre>
<p>Where:
</p>
<ul>
<li>UNTXBYTES is the unsigned bytes contained in a transaction 
</li>
<li>SECRET is the secret passphrase for the sending account
</li>
</ul>
<h4><span class="mw-headline" id="Response_58"><b>Response</b></span></h4>
<pre>
{
     &quot;fullHash&quot;:                 &quot;FULLHASH&quot;, 
     &quot;signatureHash&quot;:            &quot;SIGHASH&quot;, 
     &quot;transactionBytes&quot;:         &quot;TXBYTES&quot;, 
     &quot;transaction&quot;:              &quot;TX&quot;, 
     &quot;verify&quot;:                   &quot;VERIFY&quot;
}
</pre>
<p>Where:
</p>
<ul>
<li>FULLHASH is the full hash of the transaction
</li>
<li>SIGHASH is a sha256 hash of the transaction signature. Useful for escrow transactions
</li>
<li>TXBYTES is the bytecode of a transaction
</li>
<li>TX is the ID of the transaction
</li>
<li>VERIFY is if it is verified (true/false)
</li>
</ul>
<h4><span class="mw-headline" id="Example_60"><b>Example</b></span></h4>
<p>Request:
</p>
<pre>http://localhost:1400/api?
     requestType=signTransaction&amp;
     unsignedTransactionBytes=01016e23d700a005668683e673274c67...&amp;
     secretPhrase=0123456789
</pre>
<p>Response:
</p>
<pre>
{ 
     &quot;fullHash&quot;:         &quot;d56ade2c322083d76ebcdb9f9ef18d7d52c6d105f67be040cc423c7a41a47aea&quot;, 
     &quot;signatureHash&quot;:    &quot;458514e72f4272c789f99201c27cff611460de10fe484b474166c1199c23e754&quot;, 
     &quot;transactionBytes&quot;: &quot;0100471ddb00a005668683e673274c67180240...&quot;, 
     &quot;transaction&quot;:      &quot;15529291339976829653&quot;, 
     &quot;verify&quot;:           true 
}
</pre>
<p><small><i>Verified 5/9/14</i></small>
</p>
<h2><span class="mw-headline" id="Error_Codes"><b>Error Codes</b></span></h2>
<ul>
<li>1 - Incorrect request
</li>
<li>2 - Blockchain not up to date
</li>
<li>3 - Parameter not specified
</li>
<li>4 - Incorrect parameter
</li>
<li>5 - Unknown object (block, transaction, etc.)
<ul>
<li>In the case of accounts, this error means that no transaction has ever been sent to or from the account.  This likely means the account is "unclaimed"/unused.
</li>
</ul>
</li>
<li>6 - Not enough funds
</li>
<li>7 - Not allowed
</li>
</ul>




<nav class="main-footer-nav"><a href="/doc/en">Documentation</a></nav>

</main>
<footer><div>7522-10-24 - 7525-04-16</div></footer><script src="/js/footer.js"></script>
</body>
</html>
